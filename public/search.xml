<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>k8s-kubeadm安装k8s</title>
      <link href="/article/3114ce5f.html"/>
      <url>/article/3114ce5f.html</url>
      
        <content type="html"><![CDATA[<!-- 前言 --><p>本文主要介绍Docker和Kubernetes的安装步骤，安装Docker采用官网提供的安装方式，安装k8s采用官网提供的kubeadm方式。其中镜像地址都采用了国内阿里镜像地址。</p><span id="more"></span><h1 id="k8s集群服务器初始化（准备工作）"><a href="#k8s集群服务器初始化（准备工作）" class="headerlink" title="k8s集群服务器初始化（准备工作）"></a>k8s集群服务器初始化（准备工作）</h1><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld#临时关闭</span><br><span class="line">systemctl disable firewalld#永久关闭</span><br></pre></td></tr></table></figure><h2 id="关闭swap分区"><a href="#关闭swap分区" class="headerlink" title="关闭swap分区"></a>关闭swap分区</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">临时关闭</span></span><br><span class="line">swapoff -a</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">永久关闭</span></span><br><span class="line">vi /etc/fstab</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注释掉/dev/mapper/centos-swap swap 整行</span></span><br></pre></td></tr></table></figure><h2 id="允许-iptables-检查桥接流量"><a href="#允许-iptables-检查桥接流量" class="headerlink" title="允许 iptables 检查桥接流量"></a>允许 iptables 检查桥接流量</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | sudo tee /etc/modules-load.d/k8s.conf</span><br><span class="line">br_netfilter</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/k8s.conf</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo sysctl --system</span><br></pre></td></tr></table></figure><h2 id="将-SELinux-设置为-permissive-模式"><a href="#将-SELinux-设置为-permissive-模式" class="headerlink" title="将 SELinux 设置为 permissive 模式"></a>将 SELinux 设置为 permissive 模式</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将 SELinux 设置为 permissive 模式（相当于将其禁用）</span></span><br><span class="line">sudo setenforce 0#临时关闭</span><br><span class="line">sudo sed -i &#x27;s/^SELINUX=enforcing$/SELINUX=permissive/&#x27; /etc/selinux/config#永久关闭</span><br></pre></td></tr></table></figure><h2 id="设置主机名称并在master节点添加hosts"><a href="#设置主机名称并在master节点添加hosts" class="headerlink" title="设置主机名称并在master节点添加hosts"></a>设置主机名称并在master节点添加hosts</h2><ol><li><p><strong>分别</strong>修改主机名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname k8smaster01</span><br><span class="line"></span><br><span class="line">hostnamectl set-hostname k8snode01</span><br><span class="line"></span><br><span class="line">hostnamectl set-hostname k8snode02</span><br></pre></td></tr></table></figure></li><li><p>在master节点添加hosts，<strong>IP改为对应主机IP</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line">192.168.211.142 k8smaster01</span><br><span class="line">192.168.211.143 k8snode01</span><br><span class="line">192.168.211.144 k8snode02</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ol><h2 id="如果集群主机日期不一致请同步日期"><a href="#如果集群主机日期不一致请同步日期" class="headerlink" title="如果集群主机日期不一致请同步日期"></a>如果集群主机日期不一致请同步日期</h2><p>此处省略</p><h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/">官网kubeadm安装教程</a></p><h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><p>参考官网安装地址：<a href="https://docs.docker.com/engine/install/#server">https://docs.docker.com/engine/install/#server</a></p><p><strong>这里选择的是centos安装</strong></p><h2 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><h2 id="安装Dokcer安装包"><a href="#安装Dokcer安装包" class="headerlink" title="安装Dokcer安装包"></a>安装Dokcer安装包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br></pre></td></tr></table></figure><h2 id="设置镜像"><a href="#设置镜像" class="headerlink" title="设置镜像"></a>设置镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">官网镜像</span></span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">    </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">国内阿里镜像(推荐)</span></span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h2 id="安装Docker-Engine"><a href="#安装Docker-Engine" class="headerlink" title="安装Docker Engine"></a>安装Docker Engine</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure><h2 id="启动Dokcer"><a href="#启动Dokcer" class="headerlink" title="启动Dokcer"></a>启动Dokcer</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h2 id="配置-Docker-守护程序"><a href="#配置-Docker-守护程序" class="headerlink" title="配置 Docker 守护程序"></a>配置 Docker 守护程序</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /etc/docker</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">  &quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;100m&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;storage-driver&quot;: &quot;overlay2&quot;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="设置-Docker-并在启动时启用"><a href="#设置-Docker-并在启动时启用" class="headerlink" title="设置 Docker 并在启动时启用"></a>设置 Docker 并在启动时启用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h1 id="安装-kubeadm、kubelet-和-kubectl"><a href="#安装-kubeadm、kubelet-和-kubectl" class="headerlink" title="安装 kubeadm、kubelet 和 kubectl"></a>安装 kubeadm、kubelet 和 kubectl</h1><h2 id="添加yum源"><a href="#添加yum源" class="headerlink" title="添加yum源"></a>添加yum源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">官网google源（不推荐）</span></span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=1</span><br><span class="line">gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg</span><br><span class="line">exclude=kubelet kubeadm kubectl</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">国内阿里源（推荐）</span></span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/yum.repos.d/kubernetes.repo</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">exclude=kubelet kubeadm kubectl</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="安装-kubeadm、kubelet-和-kubectl-1"><a href="#安装-kubeadm、kubelet-和-kubectl-1" class="headerlink" title="安装 kubeadm、kubelet 和 kubectl"></a>安装 kubeadm、kubelet 和 kubectl</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes</span><br></pre></td></tr></table></figure><h2 id="设置kubelet开机启动"><a href="#设置kubelet开机启动" class="headerlink" title="设置kubelet开机启动"></a>设置kubelet开机启动</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable --now kubelet</span><br></pre></td></tr></table></figure><h1 id="在Master节点初始化平面节点"><a href="#在Master节点初始化平面节点" class="headerlink" title="在Master节点初始化平面节点"></a>在Master节点初始化平面节点</h1><p>image-repository：指定国内阿里镜像</p><p>pod-network-cidr：指定pod网络（不与主机在同一网段即可）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kubeadm init --image-repository registry.aliyuncs.com/google_containers --pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><h1 id="在Master节点使用kubectl工具"><a href="#在Master节点使用kubectl工具" class="headerlink" title="在Master节点使用kubectl工具"></a>在Master节点使用kubectl工具</h1><p>执行kubeadm init之后生成的，复制粘贴即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure><h1 id="安装-Pod-网络附加组件"><a href="#安装-Pod-网络附加组件" class="headerlink" title="安装 Pod 网络附加组件"></a>安装 Pod 网络附加组件</h1><p>任一方式均可</p><h2 id="flannel方式"><a href="#flannel方式" class="headerlink" title="flannel方式"></a>flannel方式</h2><h3 id="1、在master中配置网络映射"><a href="#1、在master中配置网络映射" class="headerlink" title="1、在master中配置网络映射"></a>1、在master中配置网络映射</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">因网站被墙，需要在/etc/hosts文件添加映射</span></span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line">199.232.68.133 raw.githubusercontent.com</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="2、在master中下载kube-flannel-yml文件"><a href="#2、在master中下载kube-flannel-yml文件" class="headerlink" title="2、在master中下载kube-flannel.yml文件"></a>2、在master中下载kube-flannel.yml文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><h3 id="3、下载flannel-docker镜像"><a href="#3、下载flannel-docker镜像" class="headerlink" title="3、下载flannel docker镜像"></a>3、下载flannel docker镜像</h3><ol><li><p>访问：<a href="https://github.com/flannel-io/flannel/releases">https://github.com/flannel-io/flannel/releases</a></p><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/k8s-kubeadm%E5%AE%89%E8%A3%85k8s_1.png" alt="下载flannel"></p></li><li><p>下载对应版本flannel docker镜像，如flanneld-v0.14.0-amd64.docker，<strong>并上传到3台服务器</strong></p></li></ol><h3 id="4、导入docker仓库"><a href="#4、导入docker仓库" class="headerlink" title="4、导入docker仓库"></a>4、导入docker仓库</h3><p><strong>3台机器把flannel镜像导入docker仓库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load &lt; flanneld-v0.14.0-amd64.docker</span><br></pre></td></tr></table></figure><h3 id="5、运行flannel插件"><a href="#5、运行flannel插件" class="headerlink" title="5、运行flannel插件"></a>5、运行flannel插件</h3><p>在<strong>master机器</strong>运行flannel插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f kube-flannel.yml</span><br></pre></td></tr></table></figure><h3 id="6、查看k8s集群状态"><a href="#6、查看k8s集群状态" class="headerlink" title="6、查看k8s集群状态"></a>6、查看k8s集群状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看所有节点是否ready</span></span><br><span class="line">kubectl get nodes</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看flannel节点是否运行正常</span></span><br><span class="line">kubectl get pod -n kube-system | grep flannel</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看kube-system启动的所有pod</span></span><br><span class="line">kubectl get pod -n kube-system</span><br></pre></td></tr></table></figure><h3 id="7、参考内容"><a href="#7、参考内容" class="headerlink" title="7、参考内容"></a>7、参考内容</h3><p><a href="https://blog.csdn.net/chen_haoren/article/details/108580338">部署k8s的时候kube-flannel.yml下载不下来解决</a></p><p><a href="https://blog.csdn.net/l229568441/article/details/115805616">CentOS-7.9通过kubeadm搭建k8s集群</a></p><h2 id="calico方式"><a href="#calico方式" class="headerlink" title="calico方式"></a>calico方式</h2><h3 id="1、下载calico-yaml"><a href="#1、下载calico-yaml" class="headerlink" title="1、下载calico.yaml"></a>1、下载calico.yaml</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://docs.projectcalico.org/manifests/calico.yaml -O</span><br></pre></td></tr></table></figure><p><strong>如果使用CIDR为192.168.0.0/16，或者使用 kubeadm，不需要修改CALICO_IPV4POOL_CIDR。其他平台需要修改CALICO_IPV4POOL_CIDR</strong></p><h3 id="2、创建使用calico"><a href="#2、创建使用calico" class="headerlink" title="2、创建使用calico"></a>2、创建使用calico</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f calico.yaml</span><br><span class="line"></span><br><span class="line">kubectl apply -f calico.yaml</span><br></pre></td></tr></table></figure><h3 id="3、参考内容"><a href="#3、参考内容" class="headerlink" title="3、参考内容"></a>3、参考内容</h3><p><a href="https://docs.projectcalico.org/getting-started/kubernetes/self-managed-onprem/onpremises#install-calico-with-kubernetes-api-datastore-50-nodes-or-less">官网安装方式</a></p><h1 id="加入node节点"><a href="#加入node节点" class="headerlink" title="加入node节点"></a>加入node节点</h1><p>执行kubeadm init之后生成的，复制粘贴即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.211.142:6443 --token nzz2t6.os75i5sh03o1l2zr \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:6747e5cd75d5ac8ce63694e6c8dbe32dedb0a29a2215b3b172e62efbc633e51e</span><br></pre></td></tr></table></figure><h1 id="测试kubernetes集群"><a href="#测试kubernetes集群" class="headerlink" title="测试kubernetes集群"></a>测试kubernetes集群</h1><p>在 Kubernetes 集群中创建一个 pod，验证是否正常运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建pod</span></span><br><span class="line">kubectl create deployment nginx --image=nginx </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">暴露端口</span></span><br><span class="line">kubectl expose deployment nginx --port=80 --type=NodePort </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">执行查看</span></span><br><span class="line">kubectl get pod,svc </span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@k8smaster01 ~]# kubectl get pod,svc</span><br><span class="line">NAME                         READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/nginx-6799fc88d8-hnwx9   1/1     Running   0          37m</span><br><span class="line"></span><br><span class="line">NAME                 TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">service/kubernetes   ClusterIP   10.96.0.1        &lt;none&gt;        443/TCP        114m</span><br><span class="line">service/nginx        NodePort    10.109.186.229   &lt;none&gt;        80:31444/TCP   6s</span><br></pre></td></tr></table></figure><p>访问地址：<a href="http://NodeIP:Port">http://NodeIP:Port</a></p><p>如我的ip为：<a href="http://192.168.211.144:31444/">http://192.168.211.144:31444/</a></p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Schema与数据类型优化</title>
      <link href="/article/d87f7e0c.html"/>
      <url>/article/d87f7e0c.html</url>
      
        <content type="html"><![CDATA[<p>本文纪录了MySQL常用数据类型、数据类型的选择。</p><!-- 前言 --><span id="more"></span><h2 id="选择优化的数据类型"><a href="#选择优化的数据类型" class="headerlink" title="选择优化的数据类型"></a>选择优化的数据类型</h2><ol><li>更小的通常更好<br>尽量使用可以正确存储数据的最小数据类型。更小的数据类型占用磁盘、内存和CUP缓存更少，处理时需要的CPU周期更少。但是要确保长度够存储值。</li><li>简单就好<br>简单数据类型的操作通常需要更少的CPU周期。例如整型比字符操作代价更低，因为字符集和校对规则使字符比较比整型复杂。</li><li>尽量避免NULL<br>通常情况下最好指定列为NOT NULL。NULL的列会使用更多的存储空间，在MySQL里也需要特殊处理。NULL列使得索引、索引统计和值比较都更复杂。</li></ol><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h3><p>整数类型有可选的UNSIGNED属性，表示不允许负值，可以使整数的上限提高一倍。有无符号的类型使用相同的存储空间，并具有相同的性能。MySQL可以为整数类型指定宽度，如INT(11)，它不会限制值的合法范围，只是用来显示字符的个数。</p><table><thead><tr><th>类型</th><th>大小</th><th>范围(有符号)</th><th>范围(无符号)</th><th>用途</th></tr></thead><tbody><tr><td>TINYINT</td><td>1 byte</td><td>(-128，127)</td><td>(0，255)</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2 bytes</td><td>(-32 768，32 767)</td><td>(0，65 535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3 bytes</td><td>(-8 388 608，8 388 607)</td><td>(0，16 777 215)</td><td>大整数值</td></tr><tr><td>INT或INTEGER</td><td>4 bytes</td><td>(-2 147 483 648，2 147 483 647)</td><td>(0，4 294 967 295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8 bytes</td><td>(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td>(0，18 446 744 073 709 551 615)</td><td>极大整数值</td></tr></tbody></table><h3 id="实数类型"><a href="#实数类型" class="headerlink" title="实数类型"></a>实数类型</h3><p>实数是带有小数部分的数字。float和double类型支持使用标准的浮点运算进行近似计算，DECIMAL类型用于存储精确的小数。5.0及之后版本，DECIMAL支持精确计算。</p><table><thead><tr><th>类型</th><th>大小</th><th>范围(有符号)</th><th>范围(无符号)</th><th>用途</th></tr></thead><tbody><tr><td>FLOAT</td><td>4 bytes</td><td>(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td>0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td>单精度浮点数值</td></tr><tr><td>DOUBLE</td><td>2 bytes</td><td>(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>双精度浮点数值</td></tr><tr><td>DECIMAL</td><td>对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td>依赖于M和D的值</td><td>依赖于M和D的值</td><td>小数值</td></tr></tbody></table><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><h3 id="日期和时间类型"><a href="#日期和时间类型" class="headerlink" title="日期和时间类型"></a>日期和时间类型</h3><h3 id="位数据类型"><a href="#位数据类型" class="headerlink" title="位数据类型"></a>位数据类型</h3><h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高性能MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL架构</title>
      <link href="/article/4d89fc03.html"/>
      <url>/article/4d89fc03.html</url>
      
        <content type="html"><![CDATA[<p>本文纪录了MySQL逻辑架构、并发控制、事务和事务特性、多版本控制等内容，并介绍了两种常用存储引擎。</p><!-- 前言 --><span id="more"></span><h2 id="MySQL逻辑架构"><a href="#MySQL逻辑架构" class="headerlink" title="MySQL逻辑架构"></a>MySQL逻辑架构</h2><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/%E9%AB%98%E6%80%A7%E8%83%BDMySQL-MySQL%E6%9E%B6%E6%9E%84.md_1.png" alt="MySQL服务器逻辑架构图"><br>MySQL主要有三层组成：</p><ol><li>第一层负责连接处理、授权认证、安全等等，并不是MySQL所独有的。<br>每个客户端的连接都对应着服务器上的一个线程。服务器上维护了一个线程池，避免为每个连接都创建销毁一个线程。当客户端连接到MySQL服务器时，服务器对其进行认证。可以通过用户名和密码的方式进行认证，可以通过SSL证书进行认证。登录认证过后，服务器还会验证该客户端是否具有执行某个查询的权限。</li><li>第二层负责解析查询（编译SQL），并对其进行优化（如调整表的读取顺序，选择合适的索引等）。对于SELECT语句，在解析查询之前，服务器会先检查查询缓存，如果能在其中找到对应的查询结果，则无需再进行查询解析、优化等过程，直接返回结果。存储过程、触发器、视图等都在这一层实现。</li><li>第三层是存储引擎。存储引擎负责MySQL中数据的存储和提取、开启一个事务等等。存储引擎通过API与上层进行通信，这些接口屏蔽了不同存储引擎之间的差异，使得这些差异对上层的查询过程透明。存储引擎不会去解析SQL。</li></ol><h2 id="并发控制"><a href="#并发控制" class="headerlink" title="并发控制"></a>并发控制</h2><p>无论何时，只要有多个查询需要在同一个时刻修改数据，都会产生并发控制的问题。</p><h3 id="读写锁"><a href="#读写锁" class="headerlink" title="读写锁"></a>读写锁</h3><p>在处理并发读或者写时，可以通过实现一个有两种类型的锁组成的锁系统来解决问题。这两种类型的锁通常被称为共享锁（shared lock）和排他锁（exclusive lock），也叫读锁（read lock）和写锁（write lock）。<br>读锁：读锁是共享的，或者说是相互不阻塞的。<br>写锁：写锁是排他的，也就是说一个写锁会阻塞其他的写锁和读锁。</p><h3 id="锁粒度"><a href="#锁粒度" class="headerlink" title="锁粒度"></a>锁粒度</h3><p>一种提高共享资源并发性的方式就是让锁定对象更有选择性。尽量只锁定需要修改的部分，而不是所有资源。锁定的数据量越少，并发程度越高，只要相互之间不发生冲突即可。问题是加锁也需要消耗资源，这时就需要锁策略，就是在锁的开销和数据的安全性之间寻求平衡。每种MySQL存储引擎都可以实现自己的锁策略和锁粒度。MySQL有两种重要的锁策略表锁和行级锁。<br><strong>表锁</strong>：MySQL最基本的锁策略，并且开销最小，它会锁定整张表。<br><strong>行级锁</strong>：行级锁可以最大程度支持并发处理（同时也带来了最大的锁开销）。行级锁只在存储引擎层实现，而MySQL服务层没有实现。</p><p>单表加锁的命令：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">格式：<span class="keyword">LOCK</span> <span class="keyword">TABLES</span> tbl_name &#123;<span class="keyword">READ</span> | <span class="keyword">WRITE</span>&#125;,[ tbl_name &#123;<span class="keyword">READ</span> | <span class="keyword">WRITE</span>&#125;,……] </span><br><span class="line">例子：<span class="keyword">lock</span> <span class="keyword">tables</span> db_a.tbl_aaa <span class="keyword">read</span>; 　　// 锁定了db_a库中的tbl_aaa表</span><br><span class="line">解锁：unlock <span class="keyword">tables</span>; </span><br></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>事务内的语句，要么全部执行成功，要么全部执行失败。就像锁粒度的升级一样，事务会增加系统的开销，用来保证事务的安全性。MySQL默认采用自动提交（AUTOCOMMIT）模式，可以通过一下命令开启</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">mysql&gt; show variables like &#x27;autocommit&#x27;;</span></span><br><span class="line"><span class="section">+---------------+-------+</span></span><br><span class="line"><span class="section">| Variable_name | Value |</span></span><br><span class="line"><span class="section">+---------------+-------+</span></span><br><span class="line"><span class="section">| autocommit    | ON    |</span></span><br><span class="line"><span class="section">+---------------+-------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="code"> </span></span><br><span class="line">mysql&gt; set autocommit =1;</span><br></pre></td></tr></table></figure><h3 id="事务的特性"><a href="#事务的特性" class="headerlink" title="事务的特性"></a>事务的特性</h3><ul><li>原子性（atomicity）：一个事务必须被视为一个不可分割的最小工作单元，整个事务中的所有操作要么全部提交成功，要么全部失败回滚，对于一个事务来说，不可能只执行其中的一部分操作。</li><li>一致性（consistency）：数据库总是从一个一致性的状态转换到另一个一致性的状态。</li><li>隔离性（isolation）：通常来说，一个事务所作的修改在最终提交之前，对其他事务时不可见的。</li><li>持久性（durability）：一旦事务提交，则其所做的修改就会永远保存到数据库。</li></ul><p>开启事务的语句</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span>;</span><br><span class="line"><span class="keyword">insert</span>、<span class="keyword">update</span>语句;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure><h3 id="事务的隔离级别"><a href="#事务的隔离级别" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h3><p>数据库事务的隔离级别有4种，由低到高分别为Read uncommitted 、Read committed 、Repeatable read 、Serializable。MySQL默认的是Repeatable read。而且，在事务的并发操作中可能会出现脏读，不可重复读，幻读。</p><ul><li>Read uncommitted（读未提交）<br>事务中的修改，即使没有提交，对其他事务也是可见的。事务可以读取未提交的数据，也称脏读。在实际应用中很少使用。<br>例如事务A修改了账户金额，在未提交时，事务B读取了账户金额，若事务A回滚事务，事务B读取了未提交的数据，即脏读。</li><li>Read committed（读提交）<br>一个事务只能读取已经提交的事务所做的操作。即一个事务从开始直到提交之前，所作的任何修改对其他事务都是不可见的。<br>例如事务A在修改账户金额前查看了账户金额，事务B这时修改了账户金额，因为事务操作时不可见，当事务A修改金额时发现账户金额改动。出现了一个事务中两个相同查询得到不同的结果，即不可重复读。针对的时UPDATE操作。</li><li>Repeatable read（重复读）<br>在开始读取数据（事务开启）时，不再允许修改操作。当前事务在读取某个范围内的纪录时，另一个事务在该范围内插入了新的纪录，之前的事务再次读取该范围的纪录时，产生幻读。针对的时INSERT操作。</li><li>Serializable（序列化）<br>Serializable是最高的事务隔离级别，在该级别下，事务串行化顺序执行，可以避免脏读、不可重复读与幻读。Serializable会在读取的每一行数据上加锁，这种事务隔离级别效率低下，比较耗数据库性能，一般不使用。</li></ul><h3 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h3><p>死锁是指两个或者多个事务在同一资源上相互占用，并请求锁定对方占用的资源，从而导致恶行循环的现象。当多个事务试图以不同的顺序锁定资源时，就可能会产生死锁。<br>数据库系统实现了各种死锁检测和死锁超时机制。</p><h3 id="事务日志"><a href="#事务日志" class="headerlink" title="事务日志"></a>事务日志</h3><p>InnoDB的事务日志主要分为redo log(重做日志，提供前滚操作)和undo log(回滚日志，提供回滚操作)，为了最大程度上减少数据写入时io问题，在存储引擎修改表的数据时，会将数据从磁盘拷贝到内存中，然后修改内存中的数据拷贝，再将修改行为持久化到磁盘中（先写redo log buffer(日志缓冲区),再定期批量写入），而不用每次将修改的数据本身持久化到硬盘中。</p><h2 id="多版本并发控制（MVCC）"><a href="#多版本并发控制（MVCC）" class="headerlink" title="多版本并发控制（MVCC）"></a>多版本并发控制（MVCC）</h2><p>InnoDB的MVCC，通过在每行纪录后面保存两个隐藏的列来实现的。这两个列，一个保存了行的创建时间，一个保存了行的过期时间（或删除时间）。存储的并不是实际的时间值，而是系统版本号。每开始一个新的事务，系统版本号都会自动递增。事务开始时刻的系统版本号会作为事务的版本号，用来和查询到的每行纪录的版本号进行比较。在REPEATABLE READ隔离级别下，MVCC具体的操作如下：</p><ul><li>SELECT <br>InnoDB会根据以下两个条件检查每行纪录： <br>  a. InnoDB只查找版本早于当前事务版本的数据行（行的系统版本号小于或等于事务的系统版本号），这样可以确保事务读取的行，要么是在事务开始前已经存在的，要么是事务自身插入或者修改过的。<br>  b. 行的删除版本，要么未定义，要么大于当前事务版本号。这样可以确保事务读取到的行，在事务开始之前未被删除。</li><li>INSERT<br>InnoDB为新增的每行保存当前系统版本号作为行版本号。</li><li>DELETE<br>InnoDB为删除的每行保存当前系统版本号作为行删除标识。</li><li>UPDATE<br>InnoDB为插入一行新纪录，保存当前系统版本号作为行版本号，同时保存当前系统版本号到原来的行作为删除标识。</li></ul><h2 id="MySQL的存储引擎"><a href="#MySQL的存储引擎" class="headerlink" title="MySQL的存储引擎"></a>MySQL的存储引擎</h2><p>MySQL默认使用InnoDB</p><table><thead><tr><th>对比项</th><th>MyISAM</th><th>InnoDB</th></tr></thead><tbody><tr><td>外键</td><td>不支持</td><td>支持</td></tr><tr><td>事务</td><td>不支持</td><td>支持</td></tr><tr><td>行表锁</td><td>表锁，即使操作一条纪录也会锁住整个表，不适合高并发操作</td><td>行锁，操作时只锁定某一行，不对其他行有影响</td></tr><tr><td>缓存</td><td>只缓存索引，不缓存真是数据</td><td>不仅缓存索引还要缓存真实数据，对内存要求较高，而且内存大小对性能有决定行的影响</td></tr><tr><td>关注点</td><td>节省资源、消耗少、简单业务</td><td>并发写、事务、更大资源</td></tr><tr><td>默认安装</td><td>Y</td><td>Y</td></tr><tr><td>默认使用</td><td>Y</td><td>Y</td></tr><tr><td>自带系统表使用</td><td>Y</td><td>N</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高性能MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos部署配置（Linux）</title>
      <link href="/article/b7476c08.html"/>
      <url>/article/b7476c08.html</url>
      
        <content type="html"><![CDATA[<p>本文主要介绍了JDK安装、MySQL安装、Nacos下载、配置持久化和Linux查看相应端口是否有项目启动。</p><!-- 前言 --><span id="more"></span><h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><h3 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h3><p>这里选择离线安装，去官网下载jdk1.8（linux）不做介绍。<br>解压jdk-8u161-linux-x64.tar.gz</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">tar</span> -zxvf jdk-<span class="number">8</span>u161-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ul><li><p>打开profile文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>profile</span><br></pre></td></tr></table></figure></li><li><p>在文件最后添加环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/jdk1.8.0_161</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"><span class="comment">#（！！！注意：JAVA_HOME的路径是你实际解压后的JDK的路径，千万别写错了）</span></span><br></pre></td></tr></table></figure></li><li><p>重新加载profile文件，通过java -version即可查看。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> <span class="regexp">/etc/</span>profile</span><br></pre></td></tr></table></figure></li></ul><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><p>可参考：<a href="https://jeecoding.github.io/article/5f46c4e.html">CentOS7安装MySQL5.7</a></p><h2 id="Nacos配置"><a href="#Nacos配置" class="headerlink" title="Nacos配置"></a>Nacos配置</h2><h3 id="下载Nacos"><a href="#下载Nacos" class="headerlink" title="下载Nacos"></a>下载Nacos</h3><p>去官网下，解压nacos-server-1.2.1.tar.gz</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">tar</span> -zxvf nacos-server-<span class="number">1</span>.<span class="number">2</span>.<span class="number">1</span>.tar.gz</span><br></pre></td></tr></table></figure><h3 id="配置持久化"><a href="#配置持久化" class="headerlink" title="配置持久化"></a>配置持久化</h3><p>进入解压目录，在conf文件夹下编辑application.properties。在文件最后添加以下配置即可。<em>不配置持久话也可启动，内置的有数据库</em></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### config of nacos</span></span><br><span class="line"><span class="attr">spring.datasource.platform</span>=mysql</span><br><span class="line"></span><br><span class="line"><span class="attr">db.num</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">db.url.0</span>=jdbc:mysql://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">3306</span>/nacos_config?characterEncoding=utf8&amp;connectTimeout=<span class="number">1000</span>&amp;socketTimeout=<span class="number">3000</span>&amp;autoReconnect=<span class="literal">true</span></span><br><span class="line"><span class="attr">db.user</span>=root</span><br><span class="line"><span class="attr">db.password</span>=password</span><br></pre></td></tr></table></figure><h3 id="启动Nacos"><a href="#启动Nacos" class="headerlink" title="启动Nacos"></a>启动Nacos</h3><p>进入bin目录启动Nacos，以下为单机启动。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sh </span>startup.<span class="keyword">sh </span>-m standalone</span><br></pre></td></tr></table></figure><p>通过以下命令查看相应端口是否有项目启动</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">netstat -lnpt</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/SpringCloud-Nacos%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE%EF%BC%88Linux%EF%BC%89_1.png" alt="1.png"></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL主从复制</title>
      <link href="/article/c813917a.html"/>
      <url>/article/c813917a.html</url>
      
        <content type="html"><![CDATA[<p>本文主要纪录了MySQL主从复制原理、基本原则和一主一从主从配置的流程。</p><!-- 前言 --><span id="more"></span><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><h3 id="MySQL数据同步"><a href="#MySQL数据同步" class="headerlink" title="MySQL数据同步"></a>MySQL数据同步</h3><p> slave会从master读取binlog来进行数据同步，因为需要读取文件所以有延迟。<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_1.png" alt="主从复制"></p><h3 id="MySQL复制过程"><a href="#MySQL复制过程" class="headerlink" title="MySQL复制过程"></a>MySQL复制过程</h3><ol><li>master将改变记录到二进制日志（binary log）。这些记录过程叫做二进制日志事件，binary log events；</li><li>slave将master的binary log events拷贝到它的中继日志（relay log）；</li><li>slave执行中继日志中的事件，将改变应用到自己的数据库中。 MySQL复制是异步的且串行化的</li></ol><h2 id="基本原则"><a href="#基本原则" class="headerlink" title="基本原则"></a>基本原则</h2><ul><li>每个slave只有一个master。</li><li>每个slave只能有一个唯一的服务器ID。</li><li>每个master可以有多个salve</li><li><em>复制的最大问题：延时</em></li></ul><h2 id="一主一从常见配置"><a href="#一主一从常见配置" class="headerlink" title="一主一从常见配置"></a>一主一从常见配置</h2><p>mysql版本一致且后台以服务运行。主从都配置在[mysqld]结点下，都是小写。<em>这里主机用的win10系统。</em></p><h3 id="1-主机修改配置文件"><a href="#1-主机修改配置文件" class="headerlink" title="1. 主机修改配置文件"></a>1. 主机修改配置文件</h3><p>在[mysqld]下配置。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment"># 主从复制</span></span><br><span class="line"><span class="comment"># 主服务器唯一ID</span></span><br><span class="line"><span class="attr">server-id</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用二进制日志：log-bin=自己本地的路径/data/mysqlbin</span></span><br><span class="line"><span class="attr">log-bin</span>=D:\Development\MySQL\logs\mysqlbin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置不要复制的数据库</span></span><br><span class="line"><span class="attr">binlog-ignore-db</span>=mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置需要复制的数据库</span></span><br><span class="line"><span class="attr">binlog-do-db</span>=my_master_slave</span><br></pre></td></tr></table></figure><h3 id="2-从机修改配置文件"><a href="#2-从机修改配置文件" class="headerlink" title="2. 从机修改配置文件"></a>2. 从机修改配置文件</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment"># 从服务器唯一ID</span></span><br><span class="line"><span class="attr">server-id</span> = <span class="number">2</span></span><br><span class="line"><span class="attr">relay-log</span>=mysql-relay</span><br></pre></td></tr></table></figure><h3 id="3-启动主从数据库服务"><a href="#3-启动主从数据库服务" class="headerlink" title="3. 启动主从数据库服务"></a>3. 启动主从数据库服务</h3><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动mysql</span></span><br><span class="line"><span class="params">system</span>ctl restart mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看mysql状态</span></span><br><span class="line"><span class="params">system</span>ctl status mysqld</span><br></pre></td></tr></table></figure><h3 id="4-关闭防火墙"><a href="#4-关闭防火墙" class="headerlink" title="4. 关闭防火墙"></a>4. 关闭防火墙</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h3 id="5-在主机上建立帐户并授权slave"><a href="#5-在主机上建立帐户并授权slave" class="headerlink" title="5. 在主机上建立帐户并授权slave"></a>5. 在主机上建立帐户并授权slave</h3><ul><li>创建用户并授权<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">GRANT</span> <span class="keyword">REPLICATION</span> SLAVE <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>查询master的状态。<br>记录下File和Position的值（会用到），执行完此步骤后不要再操作主服务器MYSQL，防止主服务器状态值变化。<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show <span class="keyword">master</span> <span class="title">status</span>;</span><br></pre></td></tr></table></figure></li></ul><h3 id="6-在从机上配置需要复制的主机"><a href="#6-在从机上配置需要复制的主机" class="headerlink" title="6. 在从机上配置需要复制的主机"></a>6. 在从机上配置需要复制的主机</h3><ul><li><p>配置需要复制的主机</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;主机IP&#x27;</span>,MASTER_USER=<span class="string">&#x27;slave&#x27;</span>,MASTER_PASSWORD=<span class="string">&#x27;123456&#x27;</span>,MASTER_LOG_FILE=<span class="string">&#x27;File名字&#x27;</span>,MASTER_LOG_POS=Position数字<span class="comment">;</span></span></span><br><span class="line">CHANGE MASTER <span class="keyword">TO</span> MASTER_HOST=<span class="string">&#x27;192.168.1.103&#x27;</span>,MASTER_USER=<span class="string">&#x27;slave&#x27;</span>,MASTER_PASSWORD=<span class="string">&#x27;123456&#x27;</span>,MASTER_LOG_FILE=<span class="string">&#x27;mysqlbin.000003&#x27;</span>,MASTER_LOG_POS=<span class="number">1616</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 启动从服务器复制功能</span></span><br><span class="line">start slave<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 停止从服务复制功能</span></span><br><span class="line">stop slave<span class="comment">;</span></span><br></pre></td></tr></table></figure></li><li><p>查看主从配置是否成功</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">show</span> slave <span class="built_in">status</span>;</span><br></pre></td></tr></table></figure><p>出现以下两点即成功。<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6_2.png" alt="image.png"></p></li></ul><h3 id="7-如何重新配置主从"><a href="#7-如何重新配置主从" class="headerlink" title="7. 如何重新配置主从"></a>7. 如何重新配置主从</h3><p>在从库中执行以下语句，重新开始第6步即可。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">stop</span> <span class="literal">slave</span>;</span><br><span class="line">reset <span class="literal">master</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL索引优化</title>
      <link href="/article/b542e386.html"/>
      <url>/article/b542e386.html</url>
      
        <content type="html"><![CDATA[<p>本文通过创建含有大量数据的数据表，测试并总结MySQL在单表、关联表、子查询、排序分组时对应的索引创建规则。</p><!-- 前言 --><span id="more"></span><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><h3 id="1-创建表"><a href="#1-创建表" class="headerlink" title="1. 创建表"></a>1. 创建表</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建数据表，大量数据的表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `dept` (</span><br><span class="line">                        `id` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">                        `deptName` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">                        `address` <span class="type">VARCHAR</span>(<span class="number">40</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">                        ceo <span class="type">INT</span> <span class="keyword">NULL</span> ,</span><br><span class="line">                        <span class="keyword">PRIMARY KEY</span> (`id`)</span><br><span class="line">) ENGINE=INNODB AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `emp` (</span><br><span class="line">                       `id` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">                       `empno` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> ,</span><br><span class="line">                       `<span class="type">name</span>` <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">                       `age` <span class="type">INT</span>(<span class="number">3</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">                       `deptId` <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">                       <span class="keyword">PRIMARY KEY</span> (`id`)</span><br><span class="line">    #<span class="keyword">CONSTRAINT</span> `fk_dept_id` <span class="keyword">FOREIGN KEY</span> (`deptId`) <span class="keyword">REFERENCES</span> `t_dept` (`id`)</span><br><span class="line">) ENGINE=INNODB AUTO_INCREMENT=<span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET=utf8;</span><br></pre></td></tr></table></figure><h3 id="2-开启自定义函数功能"><a href="#2-开启自定义函数功能" class="headerlink" title="2. 开启自定义函数功能"></a>2. 开启自定义函数功能</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 开启mysql二进制日志，可以做主从复制。如不开启不能自定义mysql函数</span></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_bin_trust_function_creators&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> log_bin_trust_function_creators<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="3-创建MySQL函数"><a href="#3-创建MySQL函数" class="headerlink" title="3. 创建MySQL函数"></a>3. 创建MySQL函数</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 随机产生字符串，DELIMITER $$:以$为开始结束符,代替;</span></span><br><span class="line"><span class="keyword">DELIMITER</span> $$<span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> rand_string(n <span class="type">INT</span>) <span class="keyword">RETURNS</span> <span class="type">VARCHAR</span>(<span class="number">255</span>)</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">BEGIN</span></span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">DECLARE</span> chars_str <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFJHIJKLMNOPQRSTUVWXYZ&#x27;</span>;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">DECLARE</span> return_str <span class="type">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">WHILE</span> i &lt; n <span class="keyword">DO</span></span></span><br><span class="line"><span class="language-pgsql">            <span class="keyword">SET</span> return_str =CONCAT(return_str,SUBSTRING(chars_str,FLOOR(<span class="number">1</span>+RAND()*<span class="number">52</span>),<span class="number">1</span>));</span></span><br><span class="line"><span class="language-pgsql">            <span class="keyword">SET</span> i = i + <span class="number">1</span>;</span></span><br><span class="line"><span class="language-pgsql">        <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">RETURN</span> return_str;</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">END</span> $$</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 随机产生部门编号</span></span><br><span class="line"><span class="keyword">DELIMITER</span> $$<span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span>  rand_num (from_num <span class="type">INT</span> ,to_num <span class="type">INT</span>) <span class="keyword">RETURNS</span> <span class="type">INT</span>(<span class="number">11</span>)</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">BEGIN</span></span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">SET</span> i = FLOOR(from_num +RAND()*(to_num -from_num+<span class="number">1</span>))   ;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">RETURN</span> i;</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">END</span>$$</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 假如要删除</span></span><br><span class="line"><span class="comment">-- drop function rand_num;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建往emp表中插入数据的存储过程</span></span><br><span class="line"><span class="keyword">DELIMITER</span> $$<span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span>  insert_emp(  <span class="keyword">START</span> <span class="type">INT</span> ,  max_num <span class="type">INT</span> )</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">BEGIN</span></span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-pgsql"><span class="meta">#set autocommit =0 把autocommit设置成0</span></span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">SET</span> autocommit = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-pgsql">    REPEAT</span></span><br><span class="line"><span class="language-pgsql">        <span class="keyword">SET</span> i = i + <span class="number">1</span>;</span></span><br><span class="line"><span class="language-pgsql">        <span class="keyword">INSERT</span> <span class="keyword">INTO</span> emp (empno, <span class="type">NAME</span> ,age ,deptid ) <span class="keyword">VALUES</span> ((<span class="keyword">START</span>+i) ,rand_string(<span class="number">6</span>)   , rand_num(<span class="number">30</span>,<span class="number">50</span>),rand_num(<span class="number">1</span>,<span class="number">10000</span>));</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">UNTIL</span> i = max_num</span></span><br><span class="line"><span class="language-pgsql">        <span class="keyword">END</span> REPEAT;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">COMMIT</span>;</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">END</span>$$</span></span><br><span class="line"><span class="comment">-- 创建往dept表中插入数据的存储过程</span></span><br><span class="line"><span class="keyword">DELIMITER</span> $$<span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> `insert_dept`(  max_num <span class="type">INT</span> )</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">BEGIN</span></span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">SET</span> autocommit = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-pgsql">    REPEAT</span></span><br><span class="line"><span class="language-pgsql">        <span class="keyword">SET</span> i = i + <span class="number">1</span>;</span></span><br><span class="line"><span class="language-pgsql">        <span class="keyword">INSERT</span> <span class="keyword">INTO</span> dept ( deptname,address,ceo ) <span class="keyword">VALUES</span> (rand_string(<span class="number">8</span>),rand_string(<span class="number">10</span>),rand_num(<span class="number">1</span>,<span class="number">500000</span>));</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">UNTIL</span> i = max_num</span></span><br><span class="line"><span class="language-pgsql">        <span class="keyword">END</span> REPEAT;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">COMMIT</span>;</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">END</span>$$</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 批量删除某个表上的所有索引</span></span><br><span class="line"><span class="keyword">DELIMITER</span> $$<span class="language-pgsql"></span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">CREATE</span>  <span class="keyword">PROCEDURE</span> `proc_drop_index`(dbname <span class="type">VARCHAR</span>(<span class="number">200</span>),tablename <span class="type">VARCHAR</span>(<span class="number">200</span>))</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">BEGIN</span></span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">DECLARE</span> done <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">DECLARE</span> ct <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">DECLARE</span> _index <span class="type">VARCHAR</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">DECLARE</span> _cur <span class="keyword">CURSOR</span> <span class="keyword">FOR</span>  <span class="keyword">SELECT</span>   index_name   <span class="keyword">FROM</span> information_schema.<span class="keyword">STATISTICS</span>   <span class="keyword">WHERE</span> table_schema=dbname <span class="keyword">AND</span> <span class="built_in">table_name</span>=tablename <span class="keyword">AND</span> seq_in_index=<span class="number">1</span> <span class="keyword">AND</span>    index_name &lt;&gt;<span class="string">&#x27;PRIMARY&#x27;</span>  ;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">DECLARE</span>  <span class="keyword">CONTINUE</span> <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">NOT</span> <span class="built_in">FOUND</span> <span class="keyword">set</span> done=<span class="number">2</span> ;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">OPEN</span> _cur;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">FETCH</span>   _cur <span class="keyword">INTO</span> _index;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">WHILE</span>  _index&lt;&gt;<span class="string">&#x27;&#x27;</span> <span class="keyword">DO</span></span></span><br><span class="line"><span class="language-pgsql">            <span class="keyword">SET</span> @str = CONCAT(&quot;drop index &quot;,_index,&quot; on &quot;,tablename );</span></span><br><span class="line"><span class="language-pgsql">            <span class="keyword">PREPARE</span> sql_str <span class="keyword">FROM</span> @str ;</span></span><br><span class="line"><span class="language-pgsql">            <span class="keyword">EXECUTE</span>  sql_str;</span></span><br><span class="line"><span class="language-pgsql">            <span class="keyword">DEALLOCATE</span> <span class="keyword">PREPARE</span> sql_str;</span></span><br><span class="line"><span class="language-pgsql">            <span class="keyword">SET</span> _index=<span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-pgsql">            <span class="keyword">FETCH</span>   _cur <span class="keyword">INTO</span> _index;</span></span><br><span class="line"><span class="language-pgsql">        <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span></span><br><span class="line"><span class="language-pgsql">    <span class="keyword">CLOSE</span> _cur;</span></span><br><span class="line"><span class="language-pgsql"><span class="keyword">END</span>$$</span></span><br></pre></td></tr></table></figure><h3 id="4-插入数据"><a href="#4-插入数据" class="headerlink" title="4. 插入数据"></a>4. 插入数据</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 执行存储过程，往dept表添加1万条数据</span></span><br><span class="line"><span class="keyword">DELIMITER</span> ;</span><br><span class="line"><span class="keyword">CALL</span> insert_dept(<span class="number">10000</span>);</span><br><span class="line"><span class="comment">-- 执行存储过程，往emp表添加50万条数据</span></span><br><span class="line"><span class="keyword">CALL</span> insert_emp(<span class="number">100000</span>,<span class="number">500000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> count(*) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> count(*) <span class="keyword">from</span> dept;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除数据库中表的索引</span></span><br><span class="line"><span class="comment">-- CALL proc_drop_index(&quot;dbname&quot;,&quot;tablename&quot;);</span></span><br></pre></td></tr></table></figure><h2 id="二、单表索引优化"><a href="#二、单表索引优化" class="headerlink" title="二、单表索引优化"></a>二、单表索引优化</h2><h3 id="索引失效规则"><a href="#索引失效规则" class="headerlink" title="索引失效规则"></a>索引失效规则</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.全值匹配我最爱</span></span><br><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> sql_no_cache * <span class="keyword">from</span> emp <span class="keyword">where</span> emp.age=<span class="number">30</span> <span class="keyword">and</span> emp.deptId=<span class="number">4</span> <span class="keyword">and</span> emp.name=<span class="string">&#x27;abcd&#x27;</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_age_depid_name <span class="keyword">on</span> emp(age,deptId,<span class="type">name</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.最佳左前缀法则，如果索引了多列，要遵守最左前缀法则。指的是查询从索引的最左前列开始并且不跳过索引中的列。(带头大哥不能死，中间兄弟不能少)</span></span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> emp.age=<span class="number">30</span>   <span class="keyword">AND</span> emp.name = <span class="string">&#x27;abcd&#x27;</span>;</span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> emp.deptid=<span class="number">1</span>   <span class="keyword">AND</span> emp.name = <span class="string">&#x27;abcd&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3.在索引列上做任何操作（计算、函数、(自动or手动)类型转换），都会导致索引失效而转向全表扫描</span></span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> emp.name <span class="keyword">LIKE</span> <span class="string">&#x27;abc%&#x27;</span>;</span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> LEFT(emp.name,<span class="number">3</span>) = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_name <span class="keyword">on</span> emp(<span class="type">name</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.存储引擎不能使用索引中范围条件右边的列。范围索引创建时应放在最后面</span></span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> emp.age=<span class="number">30</span> <span class="keyword">AND</span> emp.deptId&gt;<span class="number">20</span> <span class="keyword">AND</span> emp.name = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_age_deptid_name <span class="keyword">on</span> emp(age,deptId,<span class="type">name</span>); <span class="comment">-- 部分索引有用</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_age_name_deptid <span class="keyword">on</span> emp(age,<span class="type">name</span>,deptId); <span class="comment">-- 全部索引有用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5.mysql 在使用不等于(!= 或者&lt;&gt;)的时候无法使用索引会导致全表扫描</span></span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> emp.name &lt;&gt; <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> idx_name <span class="keyword">ON</span> emp(<span class="type">NAME</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6.is not null 也无法使用索引,但是is null是可以使用索引的</span></span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> age <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> age <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_age  <span class="keyword">on</span> emp(age);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7.like以通配符开头(&#x27;%abc...&#x27;)mysql索引失效会变成全表扫描的操作</span></span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> emp.name <span class="keyword">LIKE</span> <span class="string">&#x27;%abc%&#x27;</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_name <span class="keyword">on</span> emp(<span class="type">name</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 8.字符串不加单引号索引失效，因为myslq会自动类型转化，即3的问题</span></span><br><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> emp.name = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_name <span class="keyword">on</span> emp(<span class="type">name</span>);</span><br></pre></td></tr></table></figure><h3 id="创建索引的建议"><a href="#创建索引的建议" class="headerlink" title="创建索引的建议"></a>创建索引的建议</h3><ol><li>对于单键索引，尽量选择针对当前query过滤性更好的索引。</li><li>在选择组合索引的时候，当前Query中过滤性最好的字段在索引字段顺序中，位置越靠前越好。</li><li>在选择组合索引的时候，尽量选择可以能够包含当前query中的where字句中更多字段的索引。</li><li>在选择组合索引的时候，如果某个字段可能出现范围查询时，尽量把这个字段放在索引次序的最后面。</li><li>书写sql语句时，尽量避免造成索引失效的情况。</li></ol><h2 id="三、关联查询优化"><a href="#三、关联查询优化" class="headerlink" title="三、关联查询优化"></a>三、关联查询优化</h2><ol><li>保证被驱动表的join字段已经被索引。</li><li>left join 时，选择小表作为驱动表，大表作为被驱动表。</li><li>inner join 时，mysql会自己帮你把小结果集的表选为驱动表。</li><li>子查询尽量不要放在被驱动表，有可能使用不到索引。</li><li>能够直接多表关联的尽量直接关联，不用子查询。</li></ol><h2 id="四、子查询优化"><a href="#四、子查询优化" class="headerlink" title="四、子查询优化"></a>四、子查询优化</h2><p>尽量不要使用not in  或者 not exists，用left outer join  on  xxx is null 替代。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> SQL_NO_CACHE age,<span class="built_in">count</span>(*) <span class="keyword">FROM</span>  emp a <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> dept b <span class="keyword">ON</span> a.id =b.ceo <span class="keyword">WHERE</span> b.ceo <span class="keyword">IS</span> <span class="literal">NULL</span></span><br></pre></td></tr></table></figure><h2 id="五、排序分组优化"><a href="#五、排序分组优化" class="headerlink" title="五、排序分组优化"></a>五、排序分组优化</h2><ol><li>无过滤 不索引<br>如果SQL语句没有过滤条件，索引失效。<figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> SQL_NO_CACHE * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> age,deptid;</span><br><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> SQL_NO_CACHE * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> age,deptid <span class="keyword">limit</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure></li><li>顺序错，必排序<br>如果order by后的字段的顺序和索引创建顺序不同，Extra会出现useing filesort。<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">explain</span>  <span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> age=<span class="number">45</span> <span class="keyword">order</span> <span class="keyword">by</span>   deptid,<span class="type">name</span>; </span><br><span class="line"><span class="keyword">explain</span>  <span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> age=<span class="number">45</span> <span class="keyword">order</span> <span class="keyword">by</span>  deptid,empno;</span><br><span class="line"><span class="keyword">explain</span>  <span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> age=<span class="number">45</span> <span class="keyword">order</span> <span class="keyword">by</span>  <span class="type">name</span>,deptid;</span><br><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> deptid=<span class="number">45</span> <span class="keyword">order</span> <span class="keyword">by</span> age;</span><br></pre></td></tr></table></figure></li><li>方向反 必排序<br>如果order by后的字段的排序方式不同，Extra会出现useing filesort。要保证排序方式全部相同。<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> age=<span class="number">45</span> <span class="keyword">order</span> <span class="keyword">by</span>  deptid <span class="keyword">desc</span>, <span class="type">name</span> <span class="keyword">desc</span> ;</span><br><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> age=<span class="number">45</span> <span class="keyword">order</span> <span class="keyword">by</span>  deptid <span class="keyword">asc</span>, <span class="type">name</span> <span class="keyword">desc</span> ;</span><br></pre></td></tr></table></figure></li><li>索引选择<br>当范围条件和group by 或者 order by  的字段出现二选一时 ，优先观察条件字段的过滤数量，如果过滤的数据足够多，而需要排序的数据并不多时，优先把索引放在范围字段上。反之，亦然。<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> emp <span class="keyword">WHERE</span> age =<span class="number">30</span> <span class="keyword">AND</span> empno &lt;<span class="number">101000</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="type">NAME</span> ;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> idx_age_name <span class="keyword">ON</span> emp(age,<span class="type">NAME</span>);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_age_eno <span class="keyword">on</span> emp(age,empno); </span><br></pre></td></tr></table></figure></li><li>分组通排序<br>group by 使用索引的原则几乎跟order by一致 ，唯一区别是groupby 即使没有过滤条件用到索引，也可以直接使用索引。</li></ol><h2 id="六、覆盖索引"><a href="#六、覆盖索引" class="headerlink" title="六、覆盖索引"></a>六、覆盖索引</h2><ul><li>什么是覆盖索引？<br>简单说就是，select 到 from 之间查询的列 &lt;=使用的索引列+主键</li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL索引和索引优化分析</title>
      <link href="/article/dde64a86.html"/>
      <url>/article/dde64a86.html</url>
      
        <content type="html"><![CDATA[<p>本文介绍了索引、索引结构和索引分类，索引创建的条件，以及使用Explain分析索引应该怎么创建和避免索引失效。</p><!-- 前言 --><span id="more"></span><h2 id="索引简介"><a href="#索引简介" class="headerlink" title="索引简介"></a>索引简介</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><ul><li>索引(index)是帮助MySQL高效获取数据的数据结构。</li><li>可以理解为：索引是数据结构；或者排好序的快速查找数据结构。</li><li>索引本身很大，不可能全部存在内存中，是以索引文件的形式存储在磁盘上。</li></ul><h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><ul><li><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4></li></ul><ol><li>提高数据检索效率，降低数据库的io成本。</li><li>通过索引对数据排序，降低排序成本，降低cpu消耗。</li></ol><ul><li><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4></li></ul><ol><li>降低了更新表的速度，如insert、update和delete。</li><li>索引也是一张表，该表保存了主键和索引字段，并指向实体表的纪录，所以占用了更多空间。</li></ol><h2 id="索引结构"><a href="#索引结构" class="headerlink" title="索引结构"></a>索引结构</h2><ul><li><h3 id="B-Tree"><a href="#B-Tree" class="headerlink" title="B-Tree"></a>B-Tree</h3><h4 id="B-Tree的特点"><a href="#B-Tree的特点" class="headerlink" title="B-Tree的特点"></a>B-Tree的特点</h4>（1）所有键值分布在整个树中。<br>（2）任何关键字出现且只出现在一个节点中。<br>（3）搜索有可能在非叶子节点结束。<br>（4）在关键字全集内做一次查找，性能逼近二分查找算法。<h4 id="B-Tree存在的问题"><a href="#B-Tree存在的问题" class="headerlink" title="B-Tree存在的问题"></a>B-Tree存在的问题</h4>（1）每个节点中有key，也有data，而每一个页的存储空间是有限的，如果data数据较大时就会导致每个节点（即一个页）能存储的key的数量很小<br>（2）当存储的数据量很大时，同样1会导致B-Tree的深度较大，增加查询时的磁盘I/O次数，进而影响查询效率<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90_1.png" alt="image.png"></li></ul><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90_2.png" alt="image.png"></p><ul><li><h3 id="B-Tree-1"><a href="#B-Tree-1" class="headerlink" title="B+Tree"></a>B+Tree</h3>B+Tree与BTree的不同在于：<br>（1）所有关键字存储在叶子节点，非叶子节点不存储真正的data。<br>（2）为所有叶子节点增加了一个链指针。<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90_3.png" alt="image.png"></li></ul><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90_4.png" alt="image.png"></p><ul><li><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3>因为计算机内存问题和查询效率问题，mysql选择B+Tree</li></ul><h2 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h2><ul><li><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建索引</span><br><span class="line"><span class="keyword">CREATE</span>  [<span class="keyword">UNIQUE</span> ]  <span class="keyword">INDEX</span> [indexName] <span class="keyword">ON</span> <span class="built_in">table_name</span>(<span class="keyword">column</span>)) </span><br><span class="line"></span><br><span class="line"># 删除索引</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> [indexName] <span class="keyword">ON</span> mytable; </span><br><span class="line"></span><br><span class="line"># 查看索引</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">INDEX</span> <span class="keyword">FROM</span> <span class="built_in">table_name</span>\G</span><br></pre></td></tr></table></figure></li><li><h3 id="单一索引"><a href="#单一索引" class="headerlink" title="单一索引"></a>单一索引</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 随表一起建索引：</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `t_emp`(</span><br><span class="line">    `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment,</span><br><span class="line">    `<span class="type">name</span>` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line">    `age` <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line">    `deptId` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line">    `empno` <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="keyword">primary key</span> (`id`),</span><br><span class="line">    key <span class="string">&#x27;idx_dept_id&#x27;</span> (<span class="string">&#x27;deptId&#x27;</span>)    <span class="comment">--创建索引</span></span><br><span class="line">)engine=innodb auto_increment=<span class="number">1</span> <span class="keyword">default</span> charset = utf8;</span><br><span class="line">  </span><br><span class="line"># 单独建单值索引：</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_name <span class="keyword">on</span> t_emp(<span class="type">name</span>);</span><br><span class="line"> </span><br><span class="line"># 删除索引：</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> idx_name <span class="keyword">on</span> t_emp;</span><br></pre></td></tr></table></figure></li><li><h3 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> idx_empno <span class="keyword">on</span> t_emp(empno);</span><br></pre></td></tr></table></figure></li><li><h3 id="主键索引"><a href="#主键索引" class="headerlink" title="主键索引"></a>主键索引</h3><p>注意：<em>新建的表可以创建主键索引，已有数据的表不能新建索引。</em></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 随表一起建索引：</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customer (id <span class="type">INT</span>(<span class="number">10</span>) UNSIGNED  AUTO_INCREMENT ,customer_no <span class="type">VARCHAR</span>(<span class="number">200</span>),customer_name <span class="type">VARCHAR</span>(<span class="number">200</span>),</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span>(id) </span><br><span class="line">);</span><br><span class="line">   </span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customer2 (id <span class="type">INT</span>(<span class="number">10</span>) UNSIGNED   ,customer_no <span class="type">VARCHAR</span>(<span class="number">200</span>),customer_name <span class="type">VARCHAR</span>(<span class="number">200</span>),</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span>(id) </span><br><span class="line">);</span><br><span class="line"> </span><br><span class="line"># 单独建主键索引：</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> customer <span class="keyword">add</span> <span class="keyword">PRIMARY KEY</span> customer(customer_no);  </span><br><span class="line"> </span><br><span class="line"># 删除建主键索引：</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> customer <span class="keyword">drop</span> <span class="keyword">PRIMARY KEY</span> ;  </span><br><span class="line"> </span><br><span class="line"># 修改建主键索引：</span><br><span class="line">必须先删除掉(<span class="keyword">drop</span>)原索引，再新建(<span class="keyword">add</span>)索引</span><br></pre></td></tr></table></figure></li><li><h3 id="复合索引"><a href="#复合索引" class="headerlink" title="复合索引"></a>复合索引</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> idx_age_deptid_name <span class="keyword">on</span> t_emp(age,deptId,<span class="type">name</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90_5.png" alt="image.png"></p></li></ul><h2 id="索引创建条件"><a href="#索引创建条件" class="headerlink" title="索引创建条件"></a>索引创建条件</h2><ul><li><h3 id="需要创建索引的条件"><a href="#需要创建索引的条件" class="headerlink" title="需要创建索引的条件"></a>需要创建索引的条件</h3></li></ul><ol><li>主键自动建立唯一索引 。</li><li>频繁作为查询条件的字段应该创建索引(where 后面的语句)。</li><li>查询中与其它表关联的字段，外键关系建立索引。</li><li>单键/组合索引的选择问题，who？(在高并发下倾向创建组合索引)。</li><li>查询中排序的字段，排序字段若通过索引去访问将大大提高排序速度</li><li>查询中统计或者分组字段</li></ol><ul><li><h3 id="不需要创建索引的条件"><a href="#不需要创建索引的条件" class="headerlink" title="不需要创建索引的条件"></a>不需要创建索引的条件</h3></li></ul><ol><li>表记录太少</li><li>经常增删改的表或者字段</li><li>Where条件里用不到的字段不创建索引</li><li>过滤性不好的不适合建索引</li></ol><h2 id="Explain（索引创建的标尺）"><a href="#Explain（索引创建的标尺）" class="headerlink" title="Explain（索引创建的标尺）"></a>Explain（索引创建的标尺）</h2><h3 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h3><p>使用EXPLAIN关键字可以模拟优化器执行SQL查询语句，从而知道MySQL是<br>如何处理你的SQL语句的。分析你的查询语句或是表结构的性能瓶颈。</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">Explain</span> + <span class="keyword">SQL</span>语句</span><br><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> c.name, ab.name ceoname <span class="keyword">from</span> t_emp c <span class="keyword">left join</span> (</span><br><span class="line">    <span class="keyword">select</span> a.name,b.id <span class="keyword">from</span> t_emp a <span class="keyword">inner</span> <span class="keyword">join</span> t_dept b <span class="keyword">on</span> a.id = b.CEO</span><br><span class="line">) ab <span class="keyword">on</span> c.deptId = ab.id;</span><br></pre></td></tr></table></figure><p>可以得到以下字段<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90_6.png" alt="image.png"></p><h3 id="字段解释"><a href="#字段解释" class="headerlink" title="字段解释"></a>字段解释</h3><h4 id="id字段"><a href="#id字段" class="headerlink" title="id字段"></a>id字段</h4><p>select查询的序列号,包含一组数字，表示查询中执行select子句或操作表的顺序。<br>每个id号，表示一趟独立的查询。一个sql 的查询趟数越少越好，即id号越少越好。<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90_11.png" alt="image.png"></p><h4 id="select-type字段"><a href="#select-type字段" class="headerlink" title="select_type字段"></a>select_type字段</h4><p>查询的类型，主要是用于区别普通查询、联合查询、子查询等的复杂查询。<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90_7.png" alt="image.png"></p><h4 id="table字段"><a href="#table字段" class="headerlink" title="table字段"></a>table字段</h4><p>显示这一行的数据是关于哪张表的。</p><h4 id="type字段"><a href="#type字段" class="headerlink" title="type字段"></a>type字段</h4><p>字段类型<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90_8.png" alt="image.png"></p><p>type显示的是访问类型，是较为重要的一个指标，结果值从最好到最坏依次是：<br> （1）system &gt; const &gt; eq_ref &gt; ref &gt; fulltext &gt; ref_or_null &gt; index_merge &gt; unique_subquery &gt; index_subquery &gt; range &gt; index &gt; ALL<br> （2）system&gt;const&gt;eq_ref&gt;ref&gt;range&gt;index&gt;ALL<br>一般来说，得保证查询至少达到range级别，最好能达到ref。<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90_9.png" alt="image.png"></p><h4 id="possible-keys字段"><a href="#possible-keys字段" class="headerlink" title="possible_keys字段"></a>possible_keys字段</h4><p>显示可能应用在这张表中的索引，一个或多个。<br>查询涉及到的字段上若存在索引，则该索引将被列出，但不一定被查询实际使用。</p><h4 id="key字段"><a href="#key字段" class="headerlink" title="key字段"></a>key字段</h4><p>实际使用的索引。如果为NULL，则没有使用索引。<br>查询中若使用了覆盖索引，则该索引和查询的select字段重叠。</p><h4 id="key-len字段"><a href="#key-len字段" class="headerlink" title="key_len字段"></a>key_len字段</h4><p>表示索引中使用的字节数，可通过该列计算查询中使用的索引的长度。<br>key_len字段能够帮你检查是否充分的利用上了索引。</p><h4 id="ref字段"><a href="#ref字段" class="headerlink" title="ref字段"></a>ref字段</h4><p>显示索引的哪一列被使用了，如果可能的话，是一个常数。哪些列或常量被用于查找索引列上的值。</p><h4 id="rows字段"><a href="#rows字段" class="headerlink" title="rows字段"></a>rows字段</h4><p>rows列显示MySQL认为它执行查询时必须检查的行数。越少越好。</p><h4 id="Extra字段"><a href="#Extra字段" class="headerlink" title="Extra字段"></a>Extra字段</h4><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E7%B4%A2%E5%BC%95%E5%92%8C%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E5%88%86%E6%9E%90_10.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL逻辑架构和存储引擎</title>
      <link href="/article/dd7691d3.html"/>
      <url>/article/dd7691d3.html</url>
      
        <content type="html"><![CDATA[<p>本文纪录了MySQL的逻辑架构和MySQL执行流程，开启show_profile查看执行计划，MyISAM和InnoDB对比，以及group by使用原则。</p><!-- 前言 --><span id="more"></span><h2 id="逻辑架构"><a href="#逻辑架构" class="headerlink" title="逻辑架构"></a>逻辑架构</h2><ul><li><h3 id="MySQL系统架构图"><a href="#MySQL系统架构图" class="headerlink" title="MySQL系统架构图"></a>MySQL系统架构图</h3></li></ul><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E6%9E%B6%E6%9E%84%E9%80%BB%E8%BE%91%E5%92%8C%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E_1.png" alt="系统架构图"></p><ul><li><h3 id="MySQL逻辑架构图"><a href="#MySQL逻辑架构图" class="headerlink" title="MySQL逻辑架构图"></a>MySQL逻辑架构图</h3></li></ul><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-%E6%9E%B6%E6%9E%84%E9%80%BB%E8%BE%91%E5%92%8C%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E_2.jpg" alt="逻辑架构图"></p><h2 id="show-profile执行周期"><a href="#show-profile执行周期" class="headerlink" title="show_profile执行周期"></a>show_profile执行周期</h2><ul><li>修改配置</li></ul><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件/etc/my.cf，新增一行,开启缓存，0表示关闭，1表示打开</span></span><br><span class="line">query_cache_type=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启mysql</span></span><br><span class="line"><span class="params">system</span>ctl restart mysqld</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看mysql启动状态</span></span><br><span class="line"><span class="params">system</span>ctl status mysqld</span><br></pre></td></tr></table></figure><ul><li>开启profiling</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先查看profiling状态</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">show variables like <span class="string">&#x27;%profiling%&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启profiling</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash"><span class="built_in">set</span> profiling =1;</span></span><br></pre></td></tr></table></figure><ul><li>查看执行周期</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 执行一条<span class="keyword">sql</span>，然后可以查看执行计划。</span><br><span class="line">mysql&gt; <span class="keyword">select</span> * <span class="keyword">from</span> mytbl2 <span class="keyword">where</span> id =<span class="number">2</span>;</span><br><span class="line">mysql&gt; <span class="keyword">show</span> profiles ;</span><br><span class="line">mysql&gt; <span class="keyword">show</span> profile cpu ,block io <span class="keyword">for</span> query Query_ID;</span><br></pre></td></tr></table></figure><ul><li>sql执行顺序</li></ul><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">select distinct </span><br><span class="line"><span class="variable">&lt;select_list&gt;</span></span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line"><span class="variable">&lt;left_table&gt;</span> <span class="variable">&lt;join_type&gt;</span></span><br><span class="line">join <span class="variable">&lt;right_table&gt;</span> <span class="keyword">on</span> <span class="variable">&lt;join_condition&gt;</span></span><br><span class="line">where </span><br><span class="line"><span class="variable">&lt;where_condition&gt;</span></span><br><span class="line"><span class="keyword">group</span> by </span><br><span class="line"><span class="variable">&lt;group_by_list&gt;</span></span><br><span class="line">having </span><br><span class="line"><span class="variable">&lt;having_condition&gt;</span></span><br><span class="line">order by </span><br><span class="line"><span class="variable">&lt;order_by_condition&gt;</span></span><br><span class="line"><span class="keyword">limit</span> <span class="variable">&lt;limit_number&gt;</span></span><br></pre></td></tr></table></figure><ul><li>总结</li></ul><p><strong>多次执行相同sql时，查询缓存中的数据。只能是相同sql，因为类似redis存储的是键值对。</strong></p><h2 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h2><ul><li>查看数据库引擎</li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show engines<span class="comment">;</span></span><br></pre></td></tr></table></figure><ul><li>MyISAM和InnoDB对比</li></ul><table><thead><tr><th>对比项</th><th>MyISAM</th><th>InnoDB</th></tr></thead><tbody><tr><td>外键</td><td>不支持</td><td>支持</td></tr><tr><td>事务</td><td>不支持</td><td>支持</td></tr><tr><td>行表锁</td><td>表锁，即使操作一条纪录也会锁住整个表，不适合高并发操作</td><td>行锁，操作时只锁定某一行，不对其他行有影响</td></tr><tr><td>缓存</td><td>只缓存索引，不缓存真是数据</td><td>不仅缓存索引还要缓存真实数据，对内存要求较高，而且内存大小对性能有决定行的影响</td></tr><tr><td>关注点</td><td>节省资源、消耗少、简单业务</td><td>并发写、事务、更大资源</td></tr><tr><td>默认安装</td><td>Y</td><td>Y</td></tr><tr><td>默认使用</td><td>Y</td><td>Y</td></tr><tr><td>自带系统表使用</td><td>Y</td><td>N</td></tr></tbody></table><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><ul><li>建表</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> mytbl2 (id <span class="type">int</span>,<span class="type">name</span> <span class="type">varchar</span>(<span class="number">200</span>), age <span class="type">int</span> ,dept <span class="type">int</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> mytbl2 <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;zhang3&#x27;</span>,<span class="number">33</span>,<span class="number">101</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> mytbl2 <span class="keyword">values</span> (<span class="number">2</span>,<span class="string">&#x27;li4&#x27;</span>,<span class="number">34</span>,<span class="number">101</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> mytbl2 <span class="keyword">values</span> (<span class="number">3</span>,<span class="string">&#x27;wang5&#x27;</span>,<span class="number">34</span>,<span class="number">102</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> mytbl2 <span class="keyword">values</span> (<span class="number">4</span>,<span class="string">&#x27;zhao6&#x27;</span>,<span class="number">34</span>,<span class="number">102</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> mytbl2 <span class="keyword">values</span> (<span class="number">5</span>,<span class="string">&#x27;tian7&#x27;</span>,<span class="number">36</span>,<span class="number">102</span>);</span><br><span class="line"></span><br><span class="line"># 错误查询</span><br><span class="line"><span class="keyword">SELECT</span> <span class="type">name</span>, dept, max(age) <span class="keyword">from</span> mytbl2 <span class="keyword">group</span> <span class="keyword">by</span> dept;</span><br><span class="line"># 正确查询</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> mytbl2 m <span class="keyword">inner</span> <span class="keyword">join</span> (</span><br><span class="line"><span class="keyword">select</span> dept, max(age) maxage <span class="keyword">from</span> mytbl2 <span class="keyword">group</span> <span class="keyword">by</span> dept</span><br><span class="line">) ab <span class="keyword">on</span> ab.dept = m.dept <span class="keyword">and</span> m.age=ab.maxage;</span><br></pre></td></tr></table></figure><p><strong>group by使用原则：select后面只能放函数和group by后相关的字段</strong></p><ul><li>查看sql_mode</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show <span class="keyword">variables</span> like <span class="comment">&#x27;sql_mode&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7安装MySQL5.7</title>
      <link href="/article/b2a45c8d.html"/>
      <url>/article/b2a45c8d.html</url>
      
        <content type="html"><![CDATA[<p>本文主要纪录CentOS7安装MySQL5.7，数据库的字符集设置，设置防火墙端口，以及创建删除用户并授权等操作。</p><!-- 前言 --><span id="more"></span><h2 id="MySQL下载"><a href="#MySQL下载" class="headerlink" title="MySQL下载"></a>MySQL下载</h2><ul><li>下载地址： <a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></li></ul><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-CentOS7%E5%AE%89%E8%A3%85MySQL5.7_1.png" alt="1.png"></p><ul><li>共需要下载五个软件包<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">mysql</span>-community-common-<span class="number">5</span>.<span class="number">7</span>.<span class="number">29</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"><span class="attribute">mysql</span>-community-libs-<span class="number">5</span>.<span class="number">7</span>.<span class="number">29</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"><span class="attribute">mysql</span>-community-client-<span class="number">5</span>.<span class="number">7</span>.<span class="number">29</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"><span class="attribute">mysql</span>-community-server-<span class="number">5</span>.<span class="number">7</span>.<span class="number">29</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"><span class="attribute">mysql</span>-community-devel-<span class="number">5</span>.<span class="number">7</span>.<span class="number">29</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></li></ul><h2 id="环境检测"><a href="#环境检测" class="headerlink" title="环境检测"></a>环境检测</h2><ol><li><p>检测系统是否自带Mysql</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa<span class="string">|grep mysql</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#如存在进行强行卸载</span></span><br><span class="line">rpm -e --nodeps mysql-libs</span><br></pre></td></tr></table></figure></li><li><p>检测系统是否自带mariadb</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa<span class="string">|grep mariadb</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#如存在进行强行卸载</span></span><br><span class="line">rpm -e --nodeps mariadb-libs</span><br></pre></td></tr></table></figure></li><li><p>检测mysql依赖环境</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa<span class="string">|grep libaio</span></span><br><span class="line"><span class="meta"># 如未安装，进行安装</span></span><br><span class="line">yum install libaio</span><br><span class="line"></span><br><span class="line">rpm -qa<span class="string">|grep net-tools</span></span><br><span class="line"><span class="meta"># 如未安装，进行安装</span></span><br><span class="line">yum install net-tools</span><br></pre></td></tr></table></figure></li><li><p>查看tmp权限</p></li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ll</span> /</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-CentOS7%E5%AE%89%E8%A3%85MySQL5.7_2.png" alt="2.png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>按顺序逐个安装rpm</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># i: 安装    v：信息    h:进度条</span></span><br><span class="line"><span class="attribute">rpm</span> -ivh mysql-community-common-<span class="number">5</span>.<span class="number">7</span>.<span class="number">29</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"><span class="attribute">rpm</span> -ivh mysql-community-libs-<span class="number">5</span>.<span class="number">7</span>.<span class="number">29</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"><span class="attribute">rpm</span> -ivh mysql-community-client-<span class="number">5</span>.<span class="number">7</span>.<span class="number">29</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"><span class="attribute">rpm</span> -ivh mysql-community-server-<span class="number">5</span>.<span class="number">7</span>.<span class="number">29</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br><span class="line"><span class="attribute">rpm</span> -ivh mysql-community-devel-<span class="number">5</span>.<span class="number">7</span>.<span class="number">29</span>-<span class="number">1</span>.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></li><li><p>安装完成后，查看版本，并启动服务查看密码</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  查看版本</span></span><br><span class="line">mysqladmin <span class="comment">--version</span></span><br></pre></td></tr></table></figure></li><li><p>mysql服务初始化</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">mysqld</span> <span class="literal">--</span><span class="comment">initialize</span> <span class="literal">--</span><span class="comment">user=mysql</span></span><br></pre></td></tr></table></figure></li><li><p>查看首次安装后，mysql默认生成的root密码</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#  查看密码</span></span><br><span class="line">cat /var/<span class="built_in">log</span>/mysqld.<span class="built_in">log</span>  <span class="string">| grep password</span></span><br></pre></td></tr></table></figure></li></ol><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-CentOS7%E5%AE%89%E8%A3%85MySQL5.7_3.png" alt="3.png"></p><ol start="5"><li>安装完成后启动mysql服务<figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  启动服务</span></span><br><span class="line"><span class="params">system</span>ctl start mysqld</span><br><span class="line"><span class="comment">#  查看状态</span></span><br><span class="line"><span class="params">system</span>ctl status mysqld</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-CentOS7%E5%AE%89%E8%A3%85MySQL5.7_4.png" alt="4.png"></p><ol start="6"><li>登录数据库，并修改数据库密码。输入日志中生成的密码。<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line"># 修改密码</span><br><span class="line">mysql&gt; <span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;new password&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-CentOS7%E5%AE%89%E8%A3%85MySQL5.7_5.png" alt="5.png"></p><ol start="7"><li>退出登录</li></ol><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 退出登录</span></span><br><span class="line">mysql&gt; <span class="keyword">quit</span>;</span><br></pre></td></tr></table></figure><ol start="8"><li><p>测试</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 创建数据库</span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">database</span> mydb;</span><br><span class="line"># 使用新建的数据库</span><br><span class="line">mysql&gt; <span class="keyword">user</span> mydb</span><br><span class="line"># 创建表</span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">table</span> mytbl (id <span class="type">int</span>, <span class="type">name</span> <span class="type">varchar</span>(<span class="number">20</span>));</span><br></pre></td></tr></table></figure></li><li><p>查看mysql是否是自启动。默认为自启动</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">systemctl</span> <span class="built_in">list-unit-files</span> | <span class="string">grep</span> <span class="string">mysqld</span></span><br></pre></td></tr></table></figure></li></ol><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-CentOS7%E5%AE%89%E8%A3%85MySQL5.7_6.png" alt="6.png"></p><p>如果不是自启动可以通过一下方式设置开机启动。</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">system</span>ctl enable mysqld</span><br><span class="line"><span class="params">system</span>ctl daemon-reload</span><br></pre></td></tr></table></figure><h2 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h2><ol><li>配置mysql默认编码为utf-8<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/etc/my</span>.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在最后加上中文字符集配置</span></span><br><span class="line">character_set_server=utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启mysql</span></span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure></li></ol><p>登录root用户查看编码</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show <span class="keyword">variables</span> like <span class="comment">&#x27;%character%&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/MySQL-CentOS7%E5%AE%89%E8%A3%85MySQL5.7_7.png" alt="7.png"></p><ol start="2"><li>已生成的库表字符集更改<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 查看已创建数据库的字符集</span><br><span class="line">mysql&gt; <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">database</span> mydb;</span><br><span class="line"></span><br><span class="line"># 修改数据库的字符集</span><br><span class="line">mysql&gt; <span class="keyword">alter</span> <span class="keyword">database</span> mydb <span class="type">character</span> <span class="keyword">set</span> <span class="string">&#x27;utf8&#x27;</span>;</span><br><span class="line"># 修改表的字符集</span><br><span class="line">mysql&gt; <span class="keyword">alter</span> <span class="keyword">table</span> mytbl convert <span class="keyword">to</span> <span class="type">character</span> <span class="keyword">set</span> <span class="string">&#x27;utf8&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ol><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h2><p><strong>如果远程连接需要开放端口</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看防火墙开放端口列表</span></span><br><span class="line"> firewall-<span class="keyword">cmd</span><span class="language-bash"> --list-all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 防火墙开放3306端口</span></span><br><span class="line">firewall-<span class="keyword">cmd</span><span class="language-bash"> --add-port=3306/tcp --permanent</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启防火墙</span></span><br><span class="line"> firewall-<span class="keyword">cmd</span><span class="language-bash"> --reload</span></span><br></pre></td></tr></table></figure><h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><ol><li><p>查看系统用户表</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到系统数据库</span></span><br><span class="line">mysql&gt; use mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列式显示数据</span></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> <span class="keyword">user</span>\G;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看地址，用户和密码。</span></span><br><span class="line">mysql&gt; select host,<span class="keyword">user</span>,authentication_string <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure></li><li><p>创建用户<br>远程登录的用户无法在本地登录。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p </span><br><span class="line">mysql&gt; <span class="built_in">create</span> user <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;test_local123&#x27;</span>;  <span class="comment">#本地登录 </span></span><br><span class="line">mysql&gt; <span class="built_in">create</span> user <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;test_remote123&#x27;</span>; <span class="comment">#远程登录 </span></span><br><span class="line">quit </span><br><span class="line">mysql -u test -p <span class="comment">#测试是否创建成功</span></span><br></pre></td></tr></table></figure></li></ol><p>3.为用户授权</p><ul><li>授权格式：grant 权限 on <a href="http://lib.csdn.net/base/mysql" title="MySQL知识库">数据库</a>.* to 用户名@登录主机 identified by ‘密码’;</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">dmysql -u root -p</span><br><span class="line"></span><br><span class="line"># 创建数据库</span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">database</span> testDB; </span><br><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">database</span> testDB <span class="keyword">default</span> charset utf8 <span class="keyword">collate</span> utf8_general_ci;</span><br><span class="line"></span><br><span class="line"># 授权test用户拥有testDB数据库的所有权限：</span><br><span class="line">mysql&gt; <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> <span class="string">&#x27;test_auth&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;test_auth_local123&#x27;</span>;    #本地登录 </span><br><span class="line">mysql&gt; flush <span class="keyword">privileges</span>;    #刷新系统权限表</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">privileges</span> <span class="keyword">on</span> testdb.* <span class="keyword">to</span> <span class="string">&#x27;test_auth&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;test_auth_remote123&#x27;</span>;    #远程登录 </span><br><span class="line">mysql&gt; flush <span class="keyword">privileges</span>; #刷新系统权限表</span><br><span class="line"></span><br><span class="line"># 指定部分权限给用户:</span><br><span class="line">mysql&gt; <span class="keyword">grant</span> <span class="keyword">select</span>,<span class="keyword">update</span> <span class="keyword">on</span> testDB.* <span class="keyword">to</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;1234&#x27;</span>; </span><br><span class="line">mysql&gt; flush <span class="keyword">privileges</span>; #刷新系统权限表</span><br><span class="line"></span><br><span class="line"># 授权test用户拥有所有数据库的某些权限： 　</span><br><span class="line">mysql&gt; <span class="keyword">grant</span> <span class="keyword">select</span>,<span class="keyword">delete</span>,<span class="keyword">update</span>,<span class="keyword">create</span>,<span class="keyword">drop</span> <span class="keyword">on</span> . <span class="keyword">to</span> test@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;1234&#x27;</span>;    #<span class="string">&#x27;%&#x27;</span> 表示对所有非本地主机授权，不包括localhost</span><br><span class="line">mysql&gt; flush <span class="keyword">privileges</span>; #刷新系统权限表</span><br></pre></td></tr></table></figure><ol start="4"><li>删除用户<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 删除用户</span><br><span class="line">mysql -u root -p </span><br><span class="line">mysql&gt; <span class="keyword">delete</span> <span class="keyword">from</span> mysql.<span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span> =<span class="string">&#x27;test&#x27;</span> <span class="keyword">and</span> host =<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql&gt; flush <span class="keyword">privileges</span>;</span><br><span class="line">mysql&gt; <span class="keyword">drop</span> <span class="keyword">database</span> testdb;</span><br><span class="line"></span><br><span class="line"># 删除账户及权限：</span><br><span class="line">mysql&gt; <span class="keyword">drop</span> <span class="keyword">user</span> 用户名@<span class="string">&#x27;%&#x27;</span>; </span><br><span class="line">mysql&gt; <span class="keyword">drop</span> <span class="keyword">user</span> 用户名@localhost;</span><br></pre></td></tr></table></figure></li><li>修改指定用户密码<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p </span><br><span class="line">mysql&gt; <span class="keyword">update</span> mysql.<span class="keyword">user</span> <span class="keyword">set</span> authentication_string = <span class="keyword">password</span>(<span class="string">&#x27;test_auth_remote&#x27;</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">&#x27;test_auth&#x27;</span> <span class="keyword">and</span> host= <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">mysql&gt; flush <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis进阶（Linux）</title>
      <link href="/article/1107f857.html"/>
      <url>/article/1107f857.html</url>
      
        <content type="html"><![CDATA[<p>本文主要纪录Redis的事务命令，两种持久化方式、主从复制配置以及集群环境的搭建。</p><!-- 前言 --><span id="more"></span><h2 id="Redis事务"><a href="#Redis事务" class="headerlink" title="Redis事务"></a>Redis事务</h2><ul><li>事务命令</li></ul><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>multi</td><td>标记一个事务的开始</td></tr><tr><td>exec</td><td>执行所有事务块内的命令</td></tr><tr><td>discard</td><td>取消事务，放弃执行事务块内的所有命令</td></tr><tr><td>watch key [key]</td><td>监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断。</td></tr><tr><td>unwatch</td><td>取消watch命令对所有 key 的监视。</td></tr></tbody></table><h2 id="Redis持久化"><a href="#Redis持久化" class="headerlink" title="Redis持久化"></a>Redis持久化</h2><p>Redis持久化包括RDB和AOF两种。</p><h3 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h3><ul><li><p><strong>介绍</strong></p><p>  在指定的时间间隔内生成内存中整个数据集的持久化快照。快照文件默认被存储在当前文件夹中，名称为<code>dump.rdb</code>，可以通过dir和dbfilename参数来修改默认值，如果不修改则在启动redis的目录中生成rdb文件。</p><p>Redis会单独创建（fork）一个子进程来进行持久化，会先将数据写入到一个临时文件中，待持久化过程都结束了，再用这个临时文件替换上次持久化好的文件。  整个过程中，主进程是不进行任何的IO操作的，这就确保了极高的性能。</p></li><li><p><strong>修改redis.conf</strong></p></li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># redis是基于内存的数据库，可以通过设置该值定期写入磁盘。 </span></span><br><span class="line"><span class="comment"># 注释掉&quot;save&quot;这一行配置项就可以让保存数据库功能失效 </span></span><br><span class="line"><span class="comment"># 900秒（15分钟）内至少1个key值改变（则进行数据库保存--持久化）</span></span><br><span class="line"><span class="comment"># 300秒（5分钟）内至少10个key值改变（则进行数据库保存--持久化） </span></span><br><span class="line"><span class="comment"># 60秒（1分钟）内至少10000个key值改变（则进行数据库保存--持久化） </span></span><br><span class="line"><span class="attribute">save</span> <span class="number">900</span> <span class="number">1</span> </span><br><span class="line"><span class="attribute">save</span> <span class="number">300</span> <span class="number">10</span> </span><br><span class="line"><span class="attribute">save</span> <span class="number">60</span> <span class="number">10000</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 当RDB持久化出现错误后，是否依然进行继续进行工作，</span></span><br><span class="line"><span class="comment"># yes：不能进行工作，no：可以继续进行工作，</span></span><br><span class="line"><span class="comment"># 可以通过info中的rdb_last_bgsave_status了解RDB持久化是否有错误 </span></span><br><span class="line"><span class="attribute">stop</span>-writes-<span class="literal">on</span>-bgsave-error yes </span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用压缩rdb文件，rdb文件压缩使用LZF压缩算法，</span></span><br><span class="line"><span class="comment"># yes：压缩，但是需要一些cpu的消耗。</span></span><br><span class="line"><span class="comment"># no：不压缩，需要更多的磁盘空间 </span></span><br><span class="line"><span class="attribute">rdbcompression</span> yes </span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否校验rdb文件。从rdb格式的第五个版本开始，在rdb文件的末尾会带上CRC64的校验和。这跟有利于文件的容错性，但是在保存rdb文件的时候，会有大概10%的性能损耗，所以如果你追求高性能，可以关闭该配置。 </span></span><br><span class="line"><span class="attribute">rdbchecksum</span> yes </span><br><span class="line"></span><br><span class="line"><span class="comment"># rdb文件的名称 </span></span><br><span class="line"><span class="attribute">dbfilename</span> dump.rdb </span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据目录，数据库的写入会在这个目录。rdb、aof文件也会写在这个目录 </span></span><br><span class="line"><span class="attribute">dir</span> /data</span><br></pre></td></tr></table></figure><h3 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h3><ul><li><strong>介绍</strong></li></ul><p>以日志的形式来记录每个写操作，将Redis执行过的所有写指令记录下来（读操作补不可记录），只许追加文件但不可以改写文件，redis启动之初会读取改文件重新构建数据。保存的是appendonly.aof文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># aof机制默认关闭，可以通过参数appendonly 开启aof机制</span></span><br><span class="line"><span class="attribute">appendonly</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过参数appendfilename指定aof文件名称</span></span><br><span class="line">appendfilename myaoffile.aof</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>如果AOF和RDB，redis优先使用AOF。</p><h2 id="Redis主从复制"><a href="#Redis主从复制" class="headerlink" title="Redis主从复制"></a>Redis主从复制</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>保留一个redis.conf公共文件和三个独有文件。<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/Redis-%E8%BF%9B%E9%98%B6_1.png" alt="image.png"></p><p>独有文件配置内容如下。修改端口，并使用include引入redis.conf。<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/Redis-%E8%BF%9B%E9%98%B6_2.png" alt="image.png"></p><p>redis.conf中关闭appendonly。独有文件将公用redis.conf中RDB的路径dir 。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># aof机制默认关闭，可以通过参数appendonly 开启aof机制</span></span><br><span class="line"><span class="attribute">appendonly</span> <span class="literal">no</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过参数appendfilename指定aof文件名称</span></span><br><span class="line">appendfilename myaoffile.aof</span><br></pre></td></tr></table></figure><h3 id="设置主从"><a href="#设置主从" class="headerlink" title="设置主从"></a>设置主从</h3><p>配从(库)不配主(库)，可以通过info replication查看状态信息。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置从库</span></span><br><span class="line"><span class="attribute">slaveof</span> 主库ip 主库端口</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看主从信息</span></span><br><span class="line"><span class="literal">info</span> replication</span><br></pre></td></tr></table></figure><p><em>每次与master断开后，都需要重新连接，除非你配置进redis.conf文件</em></p><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/Redis-%E8%BF%9B%E9%98%B6_3.png" alt="image.png"></p><h3 id="薪火相传"><a href="#薪火相传" class="headerlink" title="薪火相传"></a>薪火相传</h3><p><strong>含义</strong> </p><p>就是上一个Slave可以是下一个slave的Master，Slave同样可以接收其他slaves的连接和同步请求，那么该slave作为了链条中下一个的master,可以有效减轻master的写压力。</p><p><strong>反客为主</strong></p><p>使用以下命令使当前数据库停止与其他数据库的同步，转成主数据库。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">SLAVEOF</span> <span class="literal">no</span> one</span><br></pre></td></tr></table></figure><h3 id="哨兵模式"><a href="#哨兵模式" class="headerlink" title="哨兵模式"></a>哨兵模式</h3><p>反客为主的自动版，能够后台监控Master库是否故障，如果故障了根据投票数自动将slave库转换为主库。一组sentinel能同时监控多个Master。</p><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li><p>在Master对应redis.conf同目录下新建sentinel.conf文件，名字绝对不能错；</p></li><li><p>配置哨兵，在sentinel.conf文件中填入内容(可以配置多个)：</p></li></ol><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 说明：最后一个数字1，表示主机挂掉后slave投票看让谁接替成为主机，得票数多少后成为主机。 </span></span><br><span class="line">sentinel<span class="built_in"> monitor </span>被监控数据库名字（自己起名字） ip port 1</span><br><span class="line">sentinel<span class="built_in"> monitor </span>mymaster 127.0.0.1 6379 1</span><br></pre></td></tr></table></figure><p>在某个路径下启动哨兵模式(路径按照自己的需求进行配置)：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-sentinel  <span class="regexp">/myRedis/</span>sentinel.conf</span><br></pre></td></tr></table></figure><h2 id="Redis集群"><a href="#Redis集群" class="headerlink" title="Redis集群"></a>Redis集群</h2><h3 id="安装ruby环境"><a href="#安装ruby环境" class="headerlink" title="安装ruby环境"></a>安装ruby环境</h3><p>可能出现版本过低问题，可参考<a href="https://blog.csdn.net/a1035082174/article/details/88870024">Linux中安装ruby</a>、<a href="https://blog.csdn.net/Hello_World_QWP/article/details/78261618">redis requires Ruby version &gt;= 2.2.2 系统默认 ruby 版本过低，导致 Redis 接口安装失败</a></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> ruby</span><br><span class="line">yum <span class="keyword">install</span> rubygems</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p><strong>1. 创建文件</strong></p><ul><li>一个集群至少要有三个主节点，即要有六个节点。</li><li>分配原则尽量保证每个主数据库运行在不同的ip地址，每个从库和主库不在一个ip地址。</li><li>当主节点崩了，从节点能自动升为主节点；当主节点再次恢复时，主节点变为slave。参考哨兵模式。</li><li>不在同一个slot下的键值，不能使用mset、mget等操作。</li></ul><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/Redis-%E8%BF%9B%E9%98%B6_4.png" alt="image.png"></p><p><strong>2. 每个文件的配置内容</strong> </p><p>需要修改数字部分</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> /home/huzh/myRedis/redis.<span class="keyword">conf</span></span><br><span class="line">port 6379</span><br><span class="line">pidfile /<span class="keyword">var</span>/<span class="keyword">run</span>/redis_6379.pid</span><br><span class="line">dbfilename dump6379.rdb</span><br><span class="line"><span class="keyword">cluster</span>-enabled yes</span><br><span class="line"><span class="keyword">cluster</span>-config-<span class="keyword">file</span> nodes-6379.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">cluster</span>-node-timeout 15000</span><br></pre></td></tr></table></figure><p>redis.conf中的参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只有所有slot插槽都正常的时候才对外提供服务，默认为<span class="built_in">yes</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">cluster-require-full-coverage <span class="built_in">yes</span></span></span><br></pre></td></tr></table></figure><p><strong>3. 将六个节点合成一个集群</strong></p><p>首先进入nginx安装目录，即解压目录/home/huzh/redis-3.2.5/src。使用真实ip 和端口</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /home/huzh/redis-<span class="number">3</span>.<span class="number">2</span>.<span class="number">5</span>/src</span><br><span class="line"></span><br><span class="line"># --replicas <span class="number">1</span> 表示为集群的每个主节点创建一个从节点</span><br><span class="line">./redis-trib.rb create --replicas <span class="number">1 192.168.118</span>.<span class="number">128:6379 192</span>.<span class="number">168.118.128</span>:<span class="number">6380 192.168</span>.<span class="number">118.128:6381</span> <span class="number">192.168.118.128</span>:<span class="number">6389 192.168</span>.<span class="number">118.128:6390</span> <span class="number">192.168.118.128</span>:<span class="number">6391</span></span><br></pre></td></tr></table></figure><p><strong>4. 命令</strong></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cluster nodes    <span class="meta">#查看集群信息</span></span><br><span class="line">redis-<span class="keyword">cli</span> -p 端口    <span class="meta">#会报错</span></span><br><span class="line">redis-<span class="keyword">cli</span> -c -p 端口    <span class="meta">#可以实现重定向</span></span><br></pre></td></tr></table></figure><p>可以通过{}来定义组的概念，从而使key中{}内相同内容的键值对放到一个slot中去。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">user</span>:&#123;<span class="keyword">info</span>&#125;:<span class="type">name</span> xxx </span><br><span class="line"><span class="keyword">set</span> age&#123;<span class="keyword">info</span>&#125; <span class="number">12</span> </span><br><span class="line"><span class="keyword">set</span> &#123;<span class="keyword">info</span>&#125;email <span class="number">12345</span>@qq.com </span><br><span class="line">hset <span class="keyword">user</span>&#123;<span class="keyword">info</span>&#125; <span class="type">name</span> jiang </span><br><span class="line">hset <span class="keyword">user</span>&#123;<span class="keyword">info</span>&#125; age <span class="number">19</span> </span><br><span class="line">hset <span class="keyword">user</span>&#123;<span class="keyword">info</span>&#125; eamil <span class="number">12345</span>@qq.com</span><br></pre></td></tr></table></figure><h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><p><a href="https://codekiller.top/2020/03/30/redis2/#toc-heading-73">Redis简介</a><br><a href="https://blog.csdn.net/Hello_World_QWP/article/details/78257428">CentOs7 搭建基于最新版 Redis 集群环境之图文详解</a></p>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis入门（Linux）</title>
      <link href="/article/2b6be590.html"/>
      <url>/article/2b6be590.html</url>
      
        <content type="html"><![CDATA[<p>本文主要纪录Redis在Linux中的安装、运行和Redis一些常用命令，其中包含String、List、Set、Hash、zset等命令。</p><!-- 前言 --><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Redis具体下载过程：略。</p><ul><li><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3></li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">tar</span> -zxvf redis.tar.gz</span><br></pre></td></tr></table></figure><ul><li><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3>进入redis目录<figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> &amp;&amp; <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure></li></ul><p>可在/usr/local/bin/目录中查看，bin目录中的命令可以在任何地方运行。<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/Redis-%E5%85%A5%E9%97%A8_1.png" alt="image.png"></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><ul><li><h3 id="直接运行"><a href="#直接运行" class="headerlink" title="直接运行"></a>直接运行</h3><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-<span class="keyword">server</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/Redis-%E5%85%A5%E9%97%A8_2.png" alt="image.png"></p><ul><li><h3 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h3>在 redis.conf 文件中修改：daemonize yes<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-service <span class="regexp">/路径/</span>redis.conf</span><br></pre></td></tr></table></figure></li></ul><h2 id="redis启动关闭等命令"><a href="#redis启动关闭等命令" class="headerlink" title="redis启动关闭等命令"></a>redis启动关闭等命令</h2><ul><li><h3 id="后台启动redis"><a href="#后台启动redis" class="headerlink" title="后台启动redis"></a>后台启动redis</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-service <span class="regexp">/路径/</span>redis.conf</span><br></pre></td></tr></table></figure></li><li><h3 id="进入redis客户端"><a href="#进入redis客户端" class="headerlink" title="进入redis客户端"></a>进入redis客户端</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">redis-<span class="keyword">cli</span></span><br><span class="line">或者</span><br><span class="line">redis-<span class="keyword">cli</span> -h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> -p <span class="number">6379</span></span><br><span class="line">redis-<span class="keyword">cli</span> --raw    <span class="meta">#可以解决中文乱码</span></span><br></pre></td></tr></table></figure></li></ul><p>测试客户端是否连接，并关闭redis<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/Redis-%E5%85%A5%E9%97%A8_3.png" alt="image.png"></p><ul><li><h3 id="关闭redis"><a href="#关闭redis" class="headerlink" title="关闭redis"></a>关闭redis</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0.0.1:6379</span>&gt; shutdown</span><br><span class="line">或者</span><br><span class="line">redis-cli shutdown</span><br></pre></td></tr></table></figure></li></ul><h3 id="redis基本指令"><a href="#redis基本指令" class="headerlink" title="redis基本指令"></a>redis基本指令</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">keys *      <span class="meta">#查询当前库的所有键</span></span><br><span class="line">exists &lt;<span class="built_in">key</span>&gt;    <span class="meta">#判断某个键是否存在</span></span><br><span class="line"><span class="built_in">type</span> &lt;<span class="built_in">key</span>&gt;    <span class="meta">#查看键的类型</span></span><br><span class="line">del &lt;<span class="built_in">key</span>&gt;    <span class="meta">#删除某个键</span></span><br><span class="line"></span><br><span class="line">expire &lt;<span class="built_in">key</span>&gt; &lt;seconds&gt;    <span class="meta">#为键值设置过期时间，单位秒</span></span><br><span class="line">ttl &lt;<span class="built_in">key</span>&gt;    <span class="meta">#查看还有多少秒过期，-1表示不过期，-2表示已过期</span></span><br><span class="line"></span><br><span class="line">dbsize    <span class="meta"># 查看当前数据库的key的数量</span></span><br><span class="line">Flushdb    <span class="meta">#清空当前库</span></span><br><span class="line">Flushall    <span class="meta">#清空所有库</span></span><br></pre></td></tr></table></figure><h3 id="String指令"><a href="#String指令" class="headerlink" title="String指令"></a>String指令</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">get <span class="variable">&lt;key&gt;</span>    <span class="comment">#查询对应键值</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#添加键值对</span></span><br><span class="line">append <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#将给定的&lt;value&gt;追加到原值的末尾</span></span><br><span class="line">strlen <span class="variable">&lt;key&gt;</span>    <span class="comment">#获得值的长度</span></span><br><span class="line">setnx <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#只有在key不存在时设置key的值</span></span><br><span class="line"></span><br><span class="line">incr <span class="variable">&lt;key&gt;</span>    <span class="comment">#将key中存储的数字值加1，只对数字值操作，如果为空，新增值为1</span></span><br><span class="line">decr <span class="variable">&lt;key&gt;</span>    <span class="comment">#将key中存储的数字值减1，只对数字值操作，如果为空，新增值为-1</span></span><br><span class="line">incrby/decrby <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;步长&gt;</span>    <span class="comment">#将key中存储的数字值增减，自定义步长</span></span><br><span class="line"></span><br><span class="line">mset <span class="variable">&lt;key1&gt;</span>  <span class="variable">&lt;value1&gt;</span> <span class="variable">&lt;key2&gt;</span> <span class="variable">&lt;value2&gt;</span>...    <span class="comment">#同时设置一个或者多个key-value对</span></span><br><span class="line">mget <span class="variable">&lt;key1&gt;</span> <span class="variable">&lt;key2&gt;</span>...      <span class="comment">#同时获取一个或者多个value</span></span><br><span class="line">msetnx  <span class="variable">&lt;key1&gt;</span>  <span class="variable">&lt;value1&gt;</span> <span class="variable">&lt;key2&gt;</span> <span class="variable">&lt;value2&gt;</span>...    <span class="comment">#同时设置一个或者多个key-value对,当且仅当所有给定key都不存在</span></span><br><span class="line"></span><br><span class="line">getrange <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;起始位置&gt;</span> <span class="variable">&lt;结束位置&gt;</span>    <span class="comment">#获取值的范围，类似java中的substring</span></span><br><span class="line">setrange <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;起始位置&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#用&lt;value&gt;覆盖&lt;key&gt;所存储的字符串值，从&lt;起始位置&gt;开始</span></span><br><span class="line"></span><br><span class="line">setex <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;过期时间&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#设置键值的同时，设置过期时间，单位为秒</span></span><br><span class="line">getset <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#设置新值的同时获得旧值</span></span><br></pre></td></tr></table></figure><h3 id="List指令"><a href="#List指令" class="headerlink" title="List指令"></a>List指令</h3><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">lpush/rpush &lt;key&gt; &lt;value1&gt; &lt;value2&gt;...    #从左边/右边插入一个或多个值</span><br><span class="line">lpop/rpop &lt;key&gt;    #从左边/右边吐出一个值，值在键在，值光键亡</span><br><span class="line">rpoplpush &lt;key1&gt; &lt;key2&gt;    #从&lt;key1&gt;列表右边吐出一个值，插到&lt;key2&gt;列表左边</span><br><span class="line"></span><br><span class="line"><span class="keyword">lrange</span> &lt;key&gt; &lt;start&gt; &lt;stop&gt;    #按照索引下标获得元素（从左到右）</span><br><span class="line"><span class="keyword">lindex</span> &lt;key&gt; &lt;index&gt;    #按照索引下标获得元素（从左到右）</span><br><span class="line">llen &lt;key&gt;    #获得列表长度</span><br><span class="line"></span><br><span class="line"><span class="keyword">linsert</span> &lt;key&gt; <span class="keyword">after</span> &lt;value&gt; &lt;NEWvalue&gt;    #在&lt;value&gt;的后面插入&lt;newvalue&gt;插入值</span><br><span class="line">lrem &lt;key&gt; &lt;n&gt; &lt;value&gt;    #从左边删除n个value（从左到右）</span><br></pre></td></tr></table></figure><h3 id="Set指令"><a href="#Set指令" class="headerlink" title="Set指令"></a>Set指令</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sadd <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;value1&gt;</span> <span class="variable">&lt;value2&gt;</span>...    <span class="comment">#将一个或多个member元素加入到集合key当中，已经存在于集合的member元素将被忽略</span></span><br><span class="line">smemebers <span class="variable">&lt;key&gt;</span>    <span class="comment">#取出该集合的所有值</span></span><br><span class="line">sismember <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#判断集合&lt;key&gt;是否为含有该&lt;value&gt;值，有返回1，没有返回0</span></span><br><span class="line">scard <span class="variable">&lt;key&gt;</span>    <span class="comment">#返回该集合的元素个数</span></span><br><span class="line">srem <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;value1&gt;</span> <span class="variable">&lt;value2&gt;</span>...    <span class="comment">#删除集合中的某个元素</span></span><br><span class="line">spop <span class="variable">&lt;key&gt;</span>    <span class="comment">#随机从该集合中吐出一个值</span></span><br><span class="line">srandmember <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;n&gt;</span>    <span class="comment">#随机从该集合中取出n个值，不会从集合中删除</span></span><br><span class="line"></span><br><span class="line">sinter <span class="variable">&lt;key1&gt;</span> <span class="variable">&lt;key2&gt;</span>    <span class="comment">#返回两个集合的交集元素</span></span><br><span class="line">sunion <span class="variable">&lt;key1&gt;</span> <span class="variable">&lt;key2&gt;</span>    <span class="comment">#返回两个集合的并集元素</span></span><br><span class="line">sdiff <span class="variable">&lt;key1&gt;</span> <span class="variable">&lt;key2&gt;</span>    <span class="comment">#返回两个集合的差集元素</span></span><br></pre></td></tr></table></figure><h3 id="Hash指令"><a href="#Hash指令" class="headerlink" title="Hash指令"></a>Hash指令</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hset <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;field&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#给&lt;key&gt;集合中的&lt;field&gt;键赋值&lt;value&gt;</span></span><br><span class="line">hget <span class="variable">&lt;key1&gt;</span> <span class="variable">&lt;field&gt;</span>    <span class="comment">#从&lt;key1&gt;集合&lt;field&gt;取出value</span></span><br><span class="line">hmset <span class="variable">&lt;key1&gt;</span> <span class="variable">&lt;field1&gt;</span> <span class="variable">&lt;value1&gt;</span> <span class="variable">&lt;field2&gt;</span> <span class="variable">&lt;value2&gt;</span>...    <span class="comment">#批量设置hash的值</span></span><br><span class="line"></span><br><span class="line">hexists key <span class="variable">&lt;field&gt;</span>    <span class="comment">#查看哈希表key中，给定域field是否存在</span></span><br><span class="line">hkeys <span class="variable">&lt;key&gt;</span>    <span class="comment">#列出该hash集合的所有field</span></span><br><span class="line">hvals <span class="variable">&lt;key&gt;</span>    <span class="comment">#列出该hash集合的所有value</span></span><br><span class="line">hincrby <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;field&gt;</span> <span class="variable">&lt;increment&gt;</span>    <span class="comment">#为哈希表key中的域field的值增加increment，减少为-increment</span></span><br><span class="line">hsetnx <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;field&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#将哈希表key中的域field的值设置为value，当且仅当域field不存在</span></span><br></pre></td></tr></table></figure><h3 id="zset指令"><a href="#zset指令" class="headerlink" title="zset指令"></a>zset指令</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">zadd <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;score1&gt;</span> <span class="variable">&lt;value1&gt;</span> <span class="variable">&lt;score2&gt;</span> <span class="variable">&lt;value2&gt;</span>...    <span class="comment">#将一个或多个memeber元素及其score值加入到有序集key当中</span></span><br><span class="line">zrange <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;start&gt;</span> <span class="variable">&lt;stop&gt;</span> [WITHSCORES]    <span class="comment">#返回有序集key中，下标在&lt;start&gt; &lt;stop&gt;之间的元素，带WITHSCORES，可以让分数一起和值返回到结果集。</span></span><br><span class="line">zrangebyscore key <span class="keyword">min</span> <span class="keyword">max</span> [WITHSCORES] [<span class="keyword">limit</span> offset count]    <span class="comment">#返回有序集key中，所有score值介于min和max之间（包括等于min或max）的成员。有序集成员按score值递增（从小到大）次序排列</span></span><br><span class="line">zrevrangebyscore key <span class="keyword">max</span> <span class="keyword">min</span> [withscores] [<span class="keyword">limit</span> offset count]    <span class="comment">#同上，改为从大到小排序</span></span><br><span class="line"></span><br><span class="line">zincrby <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;increment&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#为元素的score加上增量</span></span><br><span class="line">zrem <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#删除该集合下，指定的元素</span></span><br><span class="line">zcount <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;min&gt;</span> <span class="variable">&lt;max&gt;</span>    <span class="comment">#统计该集合，分数区间内的元素个数</span></span><br><span class="line">zrank <span class="variable">&lt;key&gt;</span> <span class="variable">&lt;value&gt;</span>    <span class="comment">#返回该值在集合中的排名，从0开始</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-文件上传下载</title>
      <link href="/article/36f6a157.html"/>
      <url>/article/36f6a157.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>项目中经常会有上传和下载的需求，这篇文章简述一下springboot项目中实现简单的上传和下载。前台页面使用的thymeleaf模板。</p><!-- 前言 --><span id="more"></span><h2 id="1、pom-xml文件"><a href="#1、pom-xml文件" class="headerlink" title="1、pom.xml文件"></a>1、pom.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.huzh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-upload-download<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-upload-download<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot-upload-download<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nekohtml.version</span>&gt;</span>1.9.22<span class="tag">&lt;/<span class="name">nekohtml.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--thymeleaf--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--HTML解析器和标记平衡器。--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sourceforge.nekohtml<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nekohtml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;nekohtml.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、创建index-html页面"><a href="#2、创建index-html页面" class="headerlink" title="2、创建index.html页面"></a>2、创建index.html页面</h2><p>包含单个上传，下载，批量上传。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>单文件上传<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;upload&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>文件下载<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;download&quot;</span>&gt;</span>下载文件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>多文件上传<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;batch&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>文件1：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>文件2：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、创建IndexController类"><a href="#3、创建IndexController类" class="headerlink" title="3、创建IndexController类"></a>3、创建IndexController类</h2><p>用于做页面的跳转</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、创建FileController类"><a href="#4、创建FileController类" class="headerlink" title="4、创建FileController类"></a>4、创建FileController类</h2><p>包含单个上传，单个下载，批量上传对应的方法。<br>MultipartFile  这个类一般是用来接受前台传过来的文件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(FileController.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;upload&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">upload</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> MultipartFile file)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (file.isEmpty()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;文件为空&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取文件名</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> file.getOriginalFilename();</span><br><span class="line">            logger.info(<span class="string">&quot;上传的文件名为：&quot;</span> + fileName);</span><br><span class="line">            <span class="comment">// 获取文件的后缀名</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">suffixName</span> <span class="operator">=</span> fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">            logger.info(<span class="string">&quot;文件的后缀名为：&quot;</span> + suffixName);</span><br><span class="line">            <span class="comment">//设置文件存储路径</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="string">&quot;D:/huzh/workspace/springboot_workspace/file/&quot;</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> filePath + fileName;</span><br><span class="line">            <span class="type">File</span> <span class="variable">dest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(path);</span><br><span class="line">            <span class="keyword">if</span> (!dest.getParentFile().exists()) &#123;</span><br><span class="line">                <span class="comment">//新建文件</span></span><br><span class="line">                dest.getParentFile().mkdirs();</span><br><span class="line">            &#125;</span><br><span class="line">            file.transferTo(dest);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;上传成功&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/batch&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">handleFileUpload</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        List&lt;MultipartFile&gt; files = ((MultipartHttpServletRequest) request).getFiles(<span class="string">&quot;file&quot;</span>);</span><br><span class="line">        <span class="type">MultipartFile</span> <span class="variable">file</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">BufferedOutputStream</span> <span class="variable">stream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; files.size(); i++) &#123;</span><br><span class="line">            file = files.get(i);</span><br><span class="line">            <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="string">&quot;D:/huzh/workspace/springboot_workspace/file/&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (!file.isEmpty()) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="type">byte</span>[] bytes = file.getBytes();</span><br><span class="line">                    stream = <span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(</span><br><span class="line">                            <span class="comment">//设置文件路径及名字</span></span><br><span class="line">                            <span class="keyword">new</span> <span class="title class_">File</span>(filePath + file.getOriginalFilename())));</span><br><span class="line">                    stream.write(bytes);</span><br><span class="line">                    stream.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    stream = <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;第 &quot;</span> + i + <span class="string">&quot; 个文件上传失败 ==&gt; &quot;</span></span><br><span class="line">                            + e.getMessage();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;第 &quot;</span> + i</span><br><span class="line">                        + <span class="string">&quot; 个文件上传失败因为文件为空&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;上传成功&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/download&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">downloadFile</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;123.jpg&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (fileName != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:/huzh/workspace/springboot_workspace/file/1.jpg&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">                <span class="comment">// 设置强制下载不打开</span></span><br><span class="line">                response.setContentType(<span class="string">&quot;application/force-download&quot;</span>);</span><br><span class="line">                <span class="comment">// 设置文件名</span></span><br><span class="line">                response.addHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;fileName=&quot;</span> + fileName);</span><br><span class="line">                <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="type">BufferedInputStream</span> <span class="variable">bis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fis = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">                    bis = <span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(fis);</span><br><span class="line">                    <span class="type">OutputStream</span> <span class="variable">os</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">                    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> bis.read(buffer);</span><br><span class="line">                    <span class="keyword">while</span> (i != -<span class="number">1</span>) &#123;</span><br><span class="line">                        os.write(buffer, <span class="number">0</span>, i);</span><br><span class="line">                        i = bis.read(buffer);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;下载成功&quot;</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (bis != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            bis.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (fis != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            fis.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;下载失败&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-邮件服务</title>
      <link href="/article/c0079dff.html"/>
      <url>/article/c0079dff.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>发送邮件应该是网站的必备功能之一，什么注册验证，忘记密码或者是给用户发送营销信息。最早期的时候我们会使用 JavaMail 相关 api 来写发送邮件的相关代码，后来 Spring 推出了 JavaMailSender 更加简化了邮件发送的过程，在之后 Spring Boot 对此进行了封装就有了现在的 spring-boot-starter-mail ,本章文章的介绍主要来自于此包。</p><!-- 前言 --><span id="more"></span><h2 id="1、pxm-xml文件"><a href="#1、pxm-xml文件" class="headerlink" title="1、pxm.xml文件"></a>1、pxm.xml文件</h2><p>需要引入spring-boot-starter-mail依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.huzh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-mail<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot-mail<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--thymeleaf--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--web--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mail--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、application-yml配置"><a href="#2、application-yml配置" class="headerlink" title="2、application.yml配置"></a>2、application.yml配置</h2><ul><li>配置邮箱的信息，使用QQ邮箱，密码这里需要在邮箱–&gt;设置–&gt;账户里面开启POP3/SMTP服务。</li><li>main中的信息是发送者和接受者。<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="comment">##邮箱服务器地址</span></span><br><span class="line">    <span class="comment">##QQ smtp.qq.com</span></span><br><span class="line">    <span class="comment">##sina smtp.sina.cn</span></span><br><span class="line">    <span class="comment">##aliyun smtp.aliyun.com</span></span><br><span class="line">    <span class="comment">##163 smtp.163.com</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.qq.com</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">*******@qq.com</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">******</span></span><br><span class="line">    <span class="attr">default-encoding:</span> <span class="string">utf-8</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="attr">main:</span></span><br><span class="line">  <span class="attr">formMail:</span></span><br><span class="line">    <span class="attr">sender:</span> <span class="string">*******@qq.com</span></span><br><span class="line">    <span class="attr">receiver:</span> <span class="string">******@qq.com</span></span><br></pre></td></tr></table></figure><h2 id="3、完整controller类"><a href="#3、完整controller类" class="headerlink" title="3、完整controller类"></a>3、完整controller类</h2>这里包含了发送文本邮件、发送html邮件、发送附件邮件、发送图片邮件和发送html模板邮件。其中发送模板邮件需要HTML代码。这里主要用到JavaMailSender类作为邮件发送和TemplateEngine类作为模板解析。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(<span class="built_in">this</span>.getClass());</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;main.formMail.sender&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String sender;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;main.formMail.receiver&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String receiver;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender javaMailSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TemplateEngine templateEngine;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> 发送文本邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2019/8/14 9:44</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> huzh</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/sendMail&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sendMail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SimpleMailMessage</span> <span class="variable">message</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleMailMessage</span>();</span><br><span class="line">        message.setFrom(sender);</span><br><span class="line">        message.setTo(receiver);</span><br><span class="line">        <span class="comment">//邮件主题</span></span><br><span class="line">        message.setSubject(<span class="string">&quot;文本邮件测试&quot;</span>);</span><br><span class="line">        <span class="comment">//邮件内容</span></span><br><span class="line">        message.setText(<span class="string">&quot;hello mail&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            javaMailSender.send(message);</span><br><span class="line">            logger.info(<span class="string">&quot;简单邮件已经发送。&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MailException e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;发送简单邮件时发生异常！&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> 发送html邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2019/8/14 11:52</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> huzh</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/sendHtmlMail&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sendHtmlMail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;&lt;html&gt;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&lt;body&gt;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    &lt;h3&gt;hello world ! 这是一封Html邮件!&lt;/h3&gt;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&lt;/body&gt;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&lt;/html&gt;&quot;</span>;</span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> javaMailSender.createMimeMessage();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(message, <span class="literal">true</span>);</span><br><span class="line">            helper.setFrom(sender);</span><br><span class="line">            helper.setTo(receiver);</span><br><span class="line">            helper.setSubject(<span class="string">&quot;html邮件测试&quot;</span>);</span><br><span class="line">            helper.setText(content, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            javaMailSender.send(message);</span><br><span class="line">            logger.info(<span class="string">&quot;html邮件发送成功&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MessagingException e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;发送html邮件时发生异常！&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> 发送html模板邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2019/8/14 14:51</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> huzh</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/sendHtmlTemplateMail&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sendHtmlTemplateMail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//创建邮件正文</span></span><br><span class="line">        <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Context</span>();</span><br><span class="line">        context.setVariable(<span class="string">&quot;id&quot;</span>, <span class="string">&quot;006&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> templateEngine.process(<span class="string">&quot;emailTemplate&quot;</span>, context);</span><br><span class="line"></span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> javaMailSender.createMimeMessage();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//true表示需要创建一个multipart message</span></span><br><span class="line">            <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(message, <span class="literal">true</span>);</span><br><span class="line">            helper.setFrom(sender);</span><br><span class="line">            helper.setTo(receiver);</span><br><span class="line">            helper.setSubject(<span class="string">&quot;html模板邮件测试&quot;</span>);</span><br><span class="line">            helper.setText(content, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            javaMailSender.send(message);</span><br><span class="line">            logger.info(<span class="string">&quot;html邮件发送成功&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MessagingException e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;发送html邮件时发生异常！&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> 发送附件邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2019/8/14 12:31</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> huzh</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/sendFilesMail&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sendFilesMail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> <span class="string">&quot;C:\\Users\\Administrator\\Downloads\\11.doc&quot;</span>;</span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> javaMailSender.createMimeMessage();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(message, <span class="literal">true</span>);</span><br><span class="line">            helper.setFrom(sender);</span><br><span class="line">            helper.setTo(receiver);</span><br><span class="line">            helper.setSubject(<span class="string">&quot;附件邮件测试&quot;</span>);</span><br><span class="line">            helper.setText(<span class="string">&quot;附带附件&quot;</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">FileSystemResource</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileSystemResource</span>(<span class="keyword">new</span> <span class="title class_">File</span>(filePath));</span><br><span class="line">            <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> filePath.substring(filePath.lastIndexOf(File.separator));</span><br><span class="line">            helper.addAttachment(fileName, file);</span><br><span class="line"></span><br><span class="line">            javaMailSender.send(message);</span><br><span class="line">            logger.info(<span class="string">&quot;带附件的邮件已经发送。&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MessagingException e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;发送带附件的邮件时发生异常！&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> java.lang.String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span> 发送图片邮件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@date</span> 2019/8/14 12:33</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@author</span> huzh</span></span><br><span class="line"><span class="comment">     **/</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/sendImgMail&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sendImgMail</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">Id</span> <span class="operator">=</span> <span class="string">&quot;test_mail&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;&lt;html&gt;&lt;body&gt;这是有图片的邮件：&lt;img src=\&#x27;cid:&quot;</span> + Id + <span class="string">&quot;\&#x27;&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">imgPath</span> <span class="operator">=</span> <span class="string">&quot;C:\\Users\\Administrator\\Downloads\\222.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">MimeMessage</span> <span class="variable">message</span> <span class="operator">=</span> javaMailSender.createMimeMessage();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(message, <span class="literal">true</span>);</span><br><span class="line">            helper.setFrom(sender);</span><br><span class="line">            helper.setTo(receiver);</span><br><span class="line">            helper.setSubject(<span class="string">&quot;图片邮件测试&quot;</span>);</span><br><span class="line">            helper.setText(content, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="type">FileSystemResource</span> <span class="variable">res</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileSystemResource</span>(<span class="keyword">new</span> <span class="title class_">File</span>(imgPath));</span><br><span class="line">            helper.addInline(Id, res);</span><br><span class="line"></span><br><span class="line">            javaMailSender.send(message);</span><br><span class="line">            logger.info(<span class="string">&quot;嵌入静态资源的邮件已经发送。&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MessagingException e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;发送嵌入静态资源的邮件时发生异常！&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、模板HTML"><a href="#4、模板HTML" class="headerlink" title="4、模板HTML"></a>4、模板HTML</h2>创建模板emailTemplate.html文件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">您好,这是验证邮件,请点击下面的链接完成验证,<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123; http://www.ityouknow.com/neo/&#123;id&#125;(id=$&#123;id&#125;) &#125;&quot;</span>&gt;</span>激活账号<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-整合Thymeleaf</title>
      <link href="/article/4d366430.html"/>
      <url>/article/4d366430.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Thymeleaf是一款用于渲染XML/XHTML/HTML5内容的模板引擎，类似JSP，Velocity，FreeMaker等，它也可以轻易的与Spring MVC等Web框架进行集成作为Web应用的模板引擎。<br>Thymeleaf最大的特点是能够直接在浏览器中打开并正确显示模板页面，而不需要启动整个Web应用，但是总是看到说其效率有点低。</p><!-- 前言 --><span id="more"></span><h2 id="1、pom-xml文件"><a href="#1、pom-xml文件" class="headerlink" title="1、pom.xml文件"></a>1、pom.xml文件</h2><p>NekoHTML是一个简单地HTML扫描器和标签补偿器(tag balancer) ,使得程序能解析HTML文档并用标准的XML接口来访问其中的信息。这个解析器能投扫描HTML文件并“修正”许多作者（人或机器）在编写HTML文档过程中常犯的错误。NekoHTML 能增补缺失的父元素、自动用结束标签关闭相应的元素，以及不匹配的内嵌元素标签。NekoHTML 的开发使用了Xerces Native Interface (XNI)，后者是Xerces2的实现基础。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.huzh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-thymeleaf<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot-thymeleaf<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nekohtml.version</span>&gt;</span>1.9.22<span class="tag">&lt;/<span class="name">nekohtml.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--thymeleaf--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--HTML解析器和标记平衡器。--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sourceforge.nekohtml<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nekohtml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;nekohtml.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、配置文件application-yml"><a href="#2、配置文件application-yml" class="headerlink" title="2、配置文件application.yml"></a>2、配置文件application.yml</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="comment"># 是否开启模板缓存，默认true</span></span><br><span class="line">    <span class="comment"># 建议在开发时关闭缓存,不然没法看到实时页面</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment">##去除thymeleaf的html严格校验</span></span><br><span class="line">    <span class="attr">mode:</span> <span class="string">LEGACYHTML5</span></span><br><span class="line">    <span class="comment"># 模板编码</span></span><br><span class="line">    <span class="attr">encoding:</span> <span class="string">utf-8</span></span><br></pre></td></tr></table></figure><h2 id="3、创建Controller文件"><a href="#3、创建Controller文件" class="headerlink" title="3、创建Controller文件"></a>3、创建Controller文件</h2><ul><li>Model<br>Model是一个接口，它的实现类为ExtendedModelMap，继承ModelMap类。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExtendedModelMap</span> <span class="keyword">extends</span> <span class="title class_">ModelMap</span> <span class="keyword">implements</span> <span class="title class_">Model</span></span><br></pre></td></tr></table></figure></li><li>ModelMap<br>ModelMap继承LinkedHashMap，spring框架自动创建实例并作为controller的入参，用户无需自己创建<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ModelMap</span> <span class="keyword">extends</span> <span class="title class_">LinkedHashMap</span>&lt;String,Object&gt;</span><br></pre></td></tr></table></figure></li><li>ModelAndView<br>顾名思义，ModelAndView指模型和视图的集合，既包含模型又包含视图；ModelAndView的实例是开发者自己手动创建的，这也是和ModelMap主要不同点之一；</li></ul><p><strong>Controller文件：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">testThymeleaf</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;Hello, this is thymeleaf&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;thymeleaf&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、HTML文件"><a href="#4、HTML文件" class="headerlink" title="4、HTML文件"></a>4、HTML文件</h2><p>springboot静态文件路径默认为src/main/resources/static/**<br>thymeleaf文件路径默认为src/main/resources/templates<br>如需要修改可以修改配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">prefix:</span> <span class="string">classpath:/templates/</span></span><br><span class="line">  <span class="attr">mvc:</span></span><br><span class="line">    <span class="attr">static-path-pattern:</span> <span class="string">classpath:/static/**</span></span><br></pre></td></tr></table></figure><p>html文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5、访问测试"><a href="#5、访问测试" class="headerlink" title="5、访问测试"></a>5、访问测试</h2><p><img src="https://upload-images.jianshu.io/upload_images/15592632-1b8c3becbf1b4df4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="templates.png"></p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-返回XML</title>
      <link href="/article/4438fb5b.html"/>
      <url>/article/4438fb5b.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>springboot返回的数据默认为json，但是有时间我们想返回xml的时候，就需要做少许修改。</p><!-- 前言 --><span id="more"></span><h2 id="1、pom-xml文件"><a href="#1、pom-xml文件" class="headerlink" title="1、pom.xml文件"></a>1、pom.xml文件</h2><p>引入web和xml依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.huzh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-xml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-xml<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot-xml<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--web--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--xml--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.dataformat<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-dataformat-xml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、实体类"><a href="#2、实体类" class="headerlink" title="2、实体类"></a>2、实体类</h2><ul><li>@XmlRootElement的作用<br>便于对象与xml文件之间的转换</li><li>@XmlRootElement的使用<br>在java bean上打一个标签@XmlRootElement，也可以使用@XmlRootElement(name = “user”) 。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@XmlRootElement</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line">    String userName;</span><br><span class="line">    String userAge;</span><br><span class="line">    String userAddress;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String userName, String userAge, String userAddress)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userName = userName;</span><br><span class="line">        <span class="built_in">this</span>.userAge = userAge;</span><br><span class="line">        <span class="built_in">this</span>.userAddress = userAddress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserName</span><span class="params">(String userName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userAge;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserAge</span><span class="params">(String userAge)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userAge = userAge;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userAddress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserAddress</span><span class="params">(String userAddress)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userAddress = userAddress;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、controller类"><a href="#3、controller类" class="headerlink" title="3、controller类"></a>3、controller类</h2>启动类默认即可，没有做任何调整。修改@GetMapping属性produces即可。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/json&quot;, produces = MediaType.APPLICATION_JSON_VALUE)</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;xiaoming&quot;</span>, <span class="string">&quot;18&quot;</span>, <span class="string">&quot;beijing&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/xml&quot;, produces = MediaType.APPLICATION_XML_VALUE)</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">XML</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;xiaoming&quot;</span>, <span class="string">&quot;18&quot;</span>, <span class="string">&quot;beijing&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、测试"><a href="#4、测试" class="headerlink" title="4、测试"></a>4、测试</h2></li><li>访问<a href="http://localhost:8080/json">http://localhost:8080/json</a><br><img src="https://upload-images.jianshu.io/upload_images/15592632-e951744e8f86e400.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="json.png"></li><li>访问<a href="http://localhost:8080/xml">http://localhost:8080/xml</a><br><img src="https://upload-images.jianshu.io/upload_images/15592632-5f262354f6033a24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="xml.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-使用AOP</title>
      <link href="/article/28b55c1.html"/>
      <url>/article/28b55c1.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>AOP的全称是Aspect Oriented Programming，翻译成中文是面向切面编程。它的主要思想是在程序正常执行的某一个点切进去加入特定的逻辑。AOP主要实现的目的是针对业务处理过程中的切面进行提取，它所面对的是处理过程中的某个步骤或阶段，以获得逻辑过程中各部分之间低耦合性的隔离效果，对于我们开发中最常见的可能就是日志记录，事务处理，异常处理等等。以下是SpringBoot中使用AOP。</p><!-- 前言 --><span id="more"></span><h2 id="一、pom文件"><a href="#一、pom文件" class="headerlink" title="一、pom文件"></a>一、pom文件</h2><p>引入aop依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.huzh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-aop<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot-aop<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--aop--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、创建切面"><a href="#二、创建切面" class="headerlink" title="二、创建切面"></a>二、创建切面</h2><p>这里介绍两种切面的创建方式：</p><h4 id="1、直接使用切面"><a href="#1、直接使用切面" class="headerlink" title="1、直接使用切面"></a>1、直接使用切面</h4><ul><li>@Aspect 表明是一个切面类</li><li>@Component 将当前类注入到Spring容器内</li><li>@Pointcut 切入点，其中execution用于使用切面的连接点。使用方法：execution(方法修饰符(可选) 返回类型 方法名 参数 异常模式(可选)) ，可以使用通配符匹配字符，*可以匹配任意字符。</li><li>@Before 在方法前执行</li><li>@After 在方法后执行</li><li>@AfterReturning 在方法执行后返回一个结果后执行</li><li>@AfterThrowing 在方法执行过程中抛出异常的时候执行</li><li>@Around 环绕通知，就是可以在执行前后都使用，这个方法参数必须为ProceedingJoinPoint，proceed()方法就是被切面的方法，上面四个方法可以使用JoinPoint，JoinPoint包含了类名，被切面的方法名，参数等信息。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogAspect</span> &#123;</span><br><span class="line">    <span class="meta">@Pointcut(&quot;execution(public * com.huzh.springbootaop.controller.*.*(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">LogAspect</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before(&quot;LogAspect()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doBefore</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;doBefore&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After(&quot;LogAspect()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doAfter</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;doAfter&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning(&quot;LogAspect()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doAfterReturning</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;doAfterReturning&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterThrowing(&quot;LogAspect()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deAfterThrowing</span><span class="params">(JoinPoint joinPoint)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;deAfterThrowing&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;LogAspect()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">deAround</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;deAround&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> joinPoint.proceed();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2、利用自定义注解使用AOP"><a href="#2、利用自定义注解使用AOP" class="headerlink" title="2、利用自定义注解使用AOP"></a>2、利用自定义注解使用AOP</h4></li></ul><ul><li>@Target<br>这个注解就是表明该注解类能够作用的范围，也就是能够注解在哪，比如 类、方法、参数等。<br>下面是他的一些参数：<br>@Target(ElementType.TYPE) //接口、类、枚举、注解<br>@Target(ElementType.FIELD) //字段、枚举的常量<br>@Target(ElementType.METHOD) //方法<br>@Target(ElementType.PARAMETER) //方法参数<br>@Target(ElementType.CONSTRUCTOR) //构造函数<br>@Target(ElementType.LOCAL_VARIABLE)//局部变量<br>@Target(ElementType.ANNOTATION_TYPE)//注解<br>@Target(ElementType.PACKAGE) ///包<br>里面的参数是可以多选的，使用方法比如@Target({ElementType.METHOD,ElementType.TYPE})。</li><li>@Retention<br>这个注解是保留说明，也就是表明这个注解所注解的类能在哪里保留，他有三个属性值：<br>RetentionPolicy.SOURCE —— 这种类型的Annotations只在源代码级别保留,编译时就会被忽略<br>RetentionPolicy.CLASS —— 这种类型的Annotations编译时被保留,在class文件中存在,但JVM将会忽略<br>RetentionPolicy.RUNTIME —— 这种类型的Annotations将被JVM保留,所以他们能在运行时被JVM或其他使用反射机制的代码所读取和使用。</li><li>@Documented<br>@Documented 注解表明这个注解应该被 javadoc工具记录. 默认情况下,javadoc是不包括注解的. 但如果声明注解时指定了<br>@Documented,则它会被 javadoc 之类的工具处理, 所以注解类型信息也会被包括在生成的文档中。</li><li>@Order<br>@Order标记定义了组件的加载顺序，这个标记包含一个value属性。属性接受整形值。如：1,2 等等。值越小拥有越高的优先级。Ordered.HIGHEST_PRECEDENCE这个属性值是最高优先级的属性，它的值是-2147483648，对应的最低属性值是Ordered.LOWEST_PRECEDENCE，它的值是2147483647。</li></ul><ol><li><strong>新建自定义注解</strong><br>**String param() default “”**：可以分为三部分<br><strong>String</strong>：代表这个注解的参数类型。<br>**param()**：这个是我们注解时需要传入的参数值的名称，如@DoneTime(param = “IndexController”)。如果只有一个参数需要传入，建议使用value(),这样注解时会默认传入的，这样就可以使用@LogAnnotation(“测试”)。<br>**default “”**：需要给注解一个默认值，因为如果如果开发人员没有传入值，而且没有默认值的话，会报错。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(&#123;ElementType.METHOD, ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Order(Ordered.HIGHEST_PRECEDENCE)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> DoneTime &#123;</span><br><span class="line">    String <span class="title function_">param</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><strong>创建自定义注解对应切面</strong><br>@Aspect：表明该类是一个AOP的类。<br>@annotation(doneTime)：需要输入实现的是哪个注解类。<br>DoneTime doneTime：能获取注解时传入的数据，使用方法是doneTime.param()。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DoneTimeAspect</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;@annotation(doneTime)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">around</span><span class="params">(ProceedingJoinPoint joinPoint, DoneTime doneTime)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法开始时间是:&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> joinPoint.proceed();</span><br><span class="line">        System.out.println(<span class="string">&quot;方法结束时间是:&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、创建Controller类"><a href="#三、创建Controller类" class="headerlink" title="三、创建Controller类"></a>三、创建Controller类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/index&quot;)</span></span><br><span class="line">    <span class="meta">@DoneTime(param = &quot;IndexController&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法执行&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello dalaoyang&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/index2&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index2</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;方法2执行&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello dalaoyang&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、运行测试"><a href="#四、运行测试" class="headerlink" title="四、运行测试"></a>四、运行测试</h2></li></ol><ul><li>启动项目，在浏览器访问<a href="http://localhost:8080/index">http://localhost:8080/index</a>，控制台如下：<br><img src="https://upload-images.jianshu.io/upload_images/15592632-5850fbe3e887947d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></li><li>在浏览器访问<a href="http://localhost:8080/index2">http://localhost:8080/index2</a>，控制台如下：<br><img src="https://upload-images.jianshu.io/upload_images/15592632-f9f7a7ecc786cc85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-使用事务</title>
      <link href="/article/254e46c2.html"/>
      <url>/article/254e46c2.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li><strong>数据库事务</strong>（简称：<strong>事务</strong>）是数据库管理系统执行过程中的一个逻辑单位，由一个有限的数据库操作序列构成。</li><li>事务的作用就是为了保证用户的每一个操作都是可靠的，事务中的每一步操作都必须成功执行，只要有发生异常就回退到事务开始未进行操作的状态。</li><li>springboot开启事务很简单，只需要一个注解@Transactional 就可以了。因为在springboot中已经默认对jpa、jdbc、mybatis开启了事事务，引入它们依赖的时候，事物就默认开启。当然，如果你需要用其他的orm，比如beatlsql，就需要自己配置相关的事物管理器。</li></ul><!-- 前言 --><span id="more"></span><h2 id="1、配置文件application-yml"><a href="#1、配置文件application-yml" class="headerlink" title="1、配置文件application.yml"></a>1、配置文件application.yml</h2><p>本文使用的是之前整合JPA的文章，具体可以参考 <a href="https://www.jianshu.com/p/940f58995853">SpringBoot 整合JPA</a>。这里的jpa配置略微不同，原因是需要指定数据库引擎为InnoDB，否则不能使用事务。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#数据库配置</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test?serverTimezone=GMT</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##validate  加载hibernate时，验证创建数据库表结构</span></span><br><span class="line">  <span class="comment">##create   每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。</span></span><br><span class="line">  <span class="comment">##create-drop        加载hibernate时创建，退出是删除表结构</span></span><br><span class="line">  <span class="comment">##update                 加载hibernate自动更新数据库结构</span></span><br><span class="line">  <span class="comment">##validate 启动时验证表的结构，不会创建表</span></span><br><span class="line">  <span class="comment">##none  启动时不做任何操作</span></span><br><span class="line">  <span class="comment">#jpa配置</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">hibernate:</span></span><br><span class="line">        <span class="attr">hbm2ddl:</span></span><br><span class="line">          <span class="attr">auto:</span> <span class="string">create</span></span><br><span class="line"><span class="comment">#        指定数据库引擎，用于使用事务</span></span><br><span class="line">        <span class="attr">dialect:</span> <span class="string">org.hibernate.dialect.MySQL5InnoDBDialect</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#端口号（可不配置，默认为8080）</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h2 id="2、创建controller类"><a href="#2、创建controller类" class="headerlink" title="2、创建controller类"></a>2、创建controller类</h2><ul><li>这里的会抛出 Data truncation: Data too long for column ‘house_name’ at row 1（数据过长异常），用于测试事务。</li><li>@Transactional：打开一个事务。加在类上所有方法添加事务，一般不这样用。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HouseController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> HouseRepository houseRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test1&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test1</span><span class="params">()</span> &#123;</span><br><span class="line">        houseRepository.save(<span class="keyword">new</span> <span class="title class_">House</span>(<span class="string">&quot;house1&quot;</span>, <span class="string">&quot;100平方米&quot;</span>));</span><br><span class="line">        houseRepository.save(<span class="keyword">new</span> <span class="title class_">House</span>(<span class="string">&quot;house2&quot;</span>, <span class="string">&quot;100平方米&quot;</span>));</span><br><span class="line">        houseRepository.save(<span class="keyword">new</span> <span class="title class_">House</span>(<span class="string">&quot;house3&quot;</span>, <span class="string">&quot;100平方米&quot;</span>));</span><br><span class="line">        houseRepository.save(<span class="keyword">new</span> <span class="title class_">House</span>(<span class="string">&quot;house444444444&quot;</span>, <span class="string">&quot;100平方米&quot;</span>));</span><br><span class="line">        houseRepository.save(<span class="keyword">new</span> <span class="title class_">House</span>(<span class="string">&quot;house5&quot;</span>, <span class="string">&quot;100平方米&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test2&quot;)</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test2</span><span class="params">()</span> &#123;</span><br><span class="line">        houseRepository.save(<span class="keyword">new</span> <span class="title class_">House</span>(<span class="string">&quot;house6&quot;</span>, <span class="string">&quot;100平方米&quot;</span>));</span><br><span class="line">        houseRepository.save(<span class="keyword">new</span> <span class="title class_">House</span>(<span class="string">&quot;house7&quot;</span>, <span class="string">&quot;100平方米&quot;</span>));</span><br><span class="line">        houseRepository.save(<span class="keyword">new</span> <span class="title class_">House</span>(<span class="string">&quot;house8&quot;</span>, <span class="string">&quot;100平方米&quot;</span>));</span><br><span class="line">        houseRepository.save(<span class="keyword">new</span> <span class="title class_">House</span>(<span class="string">&quot;house999999999&quot;</span>, <span class="string">&quot;100平方米&quot;</span>));</span><br><span class="line">        houseRepository.save(<span class="keyword">new</span> <span class="title class_">House</span>(<span class="string">&quot;house10&quot;</span>, <span class="string">&quot;100平方米&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-使用缓存</title>
      <link href="/article/3cf784d1.html"/>
      <url>/article/3cf784d1.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>大多数情况下，我们都会使用数据库。当我们使用的数据频率很好时，就会考虑使用缓存提高响应速度和承载能力。本文来介绍SpringBoot来简单整合缓存，使用SpringBoot+JPA+mysql来进行数据库操作。整合JPA的文章，具体可以参考 <a href="https://www.jianshu.com/p/940f58995853">SpringBoot 整合JPA</a>。</p><!-- 前言 --><span id="more"></span><h2 id="spring-cache-注解介绍"><a href="#spring-cache-注解介绍" class="headerlink" title="spring cache 注解介绍"></a>spring cache 注解介绍</h2><ul><li>@Cacheable<br>  这个注解在执行前先查看缓存中是不是已经存在了，如果存在，直接返回。如果不存在，将方法的返回值放入缓存。</li></ul><table><thead><tr><th>属性</th><th>类型</th><th>功能</th></tr></thead><tbody><tr><td>value</td><td>String[]</td><td>缓存的名称 和cacheNames功能一样</td></tr><tr><td>cacheNames</td><td>String[]</td><td>缓存的名称和value功能一样</td></tr><tr><td>key</td><td>String</td><td>缓存key的值、默认是以所有的参数作为key、也可以直接配置keyGenerator</td></tr><tr><td>keyGenerator</td><td>String</td><td>缓存key的生成器</td></tr><tr><td>cacheManager</td><td>String</td><td>配置使用那个缓存管理器、和cacheResolver排斥</td></tr><tr><td>cacheResolver</td><td>String</td><td>定义使用那个拦截器、和cacheManager互斥</td></tr><tr><td>condition</td><td>String</td><td>根据spel表达式来可以配置什么条件下进行缓存 默认全部缓存</td></tr><tr><td>unless</td><td>String</td><td>和condition相反</td></tr><tr><td>sync</td><td>boolean</td><td>是否开启同步功能、默认不开启</td></tr></tbody></table><ul><li>@CachePut<br>这个注解直接将返回值放入缓存中，通常用于保存和修改方法中</li></ul><table><thead><tr><th>属性</th><th>类型</th><th>功能</th></tr></thead><tbody><tr><td>value</td><td>String[]</td><td>缓存的名称 和cacheNames功能一样</td></tr><tr><td>cacheNames</td><td>String[]</td><td>缓存的名称和value功能一样</td></tr><tr><td>key</td><td>String</td><td>缓存key的值、默认是以所有的参数作为key、也可以直接配置keyGenerator</td></tr><tr><td>keyGenerator</td><td>String</td><td>缓存key的生成器</td></tr><tr><td>cacheManager</td><td>String</td><td>配置使用那个缓存管理器、和cacheResolver排斥</td></tr><tr><td>cacheResolver</td><td>String</td><td>定义使用那个拦截器、和cacheManager互斥</td></tr><tr><td>condition</td><td>String</td><td>根据spel表达式来可以配置什么条件下进行缓存 默认全部缓存</td></tr><tr><td>unless</td><td>String</td><td>和condition相反</td></tr></tbody></table><ul><li>@CacheEvict<br>这个注解在执行方法执行成功后会从缓存中移除</li></ul><table><thead><tr><th>属性</th><th>类型</th><th>功能</th></tr></thead><tbody><tr><td>value</td><td>String[]</td><td>缓存的名称 和cacheNames功能一样</td></tr><tr><td>cacheNames</td><td>String[]</td><td>缓存的名称和value功能一样</td></tr><tr><td>key</td><td>String</td><td>缓存key的值、默认是以所有的参数作为key、也可以直接配置keyGenerator</td></tr><tr><td>keyGenerator</td><td>String</td><td>缓存key的生成器</td></tr><tr><td>cacheManager</td><td>String</td><td>配置使用那个缓存管理器、和cacheResolver排斥</td></tr><tr><td>cacheResolver</td><td>String</td><td>定义使用那个拦截器、和cacheManager互斥</td></tr><tr><td>condition</td><td>String</td><td>根据spel表达式来可以配置什么条件下进行缓存 默认全部缓存</td></tr><tr><td>allEntries</td><td>boolean</td><td>是否删除所有键的缓存 默认不删除</td></tr><tr><td>beforeInvocation</td><td>boolean</td><td>是否在调用此方法前 删除缓存</td></tr></tbody></table><ul><li>@CacheConfig<br>在类级别统一的配置缓存公共配置.</li></ul><table><thead><tr><th>属性</th><th>类型</th><th>功能</th></tr></thead><tbody><tr><td>cacheNames</td><td>String[]</td><td>缓存的名称和value功能一样</td></tr><tr><td>keyGenerator</td><td>String缓存key的生成器</td><td></td></tr><tr><td>cacheManager</td><td>String</td><td>配置使用那个缓存管理器、和cacheResolver排斥</td></tr><tr><td>cacheResolver</td><td>String</td><td>定义使用那个拦截器、和cacheManager互斥</td></tr></tbody></table><ul><li>@EnableCaching<br>开启缓存以及缓存的全局配置</li></ul><table><thead><tr><th>属性</th><th>类型</th><th>功能</th></tr></thead><tbody><tr><td>proxyTargetClass</td><td>boolean</td><td>是否要基于cglib生成代理去实现缓存</td></tr><tr><td>mode</td><td>AdviceMode配置那种模式去实现缓存、默认是AdviceMode.PROXY  可以切换为 AdviceMode#ASPECTJ</td><td></td></tr><tr><td>order</td><td>int</td><td>设置缓存管理器执行的顺序</td></tr></tbody></table><ul><li>@Caching<br>对多个缓存组的配置</li></ul><table><thead><tr><th>属性</th><th>类型</th><th>功能</th></tr></thead><tbody><tr><td>cacheable</td><td>Cacheable</td><td>配置获取缓存相关的配置</td></tr><tr><td>put</td><td>CachePut</td><td>配置如何更新缓存的相关配置</td></tr><tr><td>evict</td><td>CacheEvict</td><td>配置如何删除缓存的相关配置</td></tr></tbody></table><h2 id="1、pom-xml文件"><a href="#1、pom-xml文件" class="headerlink" title="1、pom.xml文件"></a>1、pom.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.huzh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-cache<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot-cache<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--cache--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--jpa--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、配置文件application-yml"><a href="#2、配置文件application-yml" class="headerlink" title="2、配置文件application.yml"></a>2、配置文件application.yml</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#数据库配置</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test?serverTimezone=GMT</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##validate  加载hibernate时，验证创建数据库表结构</span></span><br><span class="line">  <span class="comment">##create   每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。</span></span><br><span class="line">  <span class="comment">##create-drop        加载hibernate时创建，退出是删除表结构</span></span><br><span class="line">  <span class="comment">##update                 加载hibernate自动更新数据库结构</span></span><br><span class="line">  <span class="comment">##validate 启动时验证表的结构，不会创建表</span></span><br><span class="line">  <span class="comment">##none  启动时不做任何操作</span></span><br><span class="line">  <span class="comment">#jpa配置</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h2 id="3、实体类"><a href="#3、实体类" class="headerlink" title="3、实体类"></a>3、实体类</h2><p>主键采用int型自增。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">House</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="meta">@Column(length = 10)</span></span><br><span class="line">    <span class="keyword">private</span> String houseName;</span><br><span class="line">    <span class="keyword">private</span> String houseSize;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getHouseName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> houseName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHouseName</span><span class="params">(String houseName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.houseName = houseName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getHouseSize</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> houseSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHouseSize</span><span class="params">(String houseSize)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.houseSize = houseSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">House</span><span class="params">(String houseName, String houseSize)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.houseName = houseName;</span><br><span class="line">        <span class="built_in">this</span>.houseSize = houseSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">House</span><span class="params">(<span class="type">int</span> id, String houseName, String houseSize)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.houseName = houseName;</span><br><span class="line">        <span class="built_in">this</span>.houseSize = houseSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">House</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、Repository接口"><a href="#4、Repository接口" class="headerlink" title="4、Repository接口"></a>4、Repository接口</h2><p>继承jpa接口JpaRepository。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">HouseRepository</span> <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&lt;House, Integer&gt; &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、启动类上加入-EnableCaching开启缓存"><a href="#5、启动类上加入-EnableCaching开启缓存" class="headerlink" title="5、启动类上加入@EnableCaching开启缓存"></a>5、启动类上加入@EnableCaching开启缓存</h2><p>@EnableCaching开启缓存以及缓存的全局配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringbootCacheApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SpringbootCacheApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、创建controller类"><a href="#6、创建controller类" class="headerlink" title="6、创建controller类"></a>6、创建controller类</h2><p>访问时观察控制台sql打印情况。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HouseController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> HouseRepository houseRepository;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//http://localhost:8080/saveHouse?id=1&amp;houseName=别墅&amp;houseSize=1220平方米</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/saveHouse&quot;)</span></span><br><span class="line">    <span class="meta">@CachePut(value = &quot;house&quot;, key = &quot;#id&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> House <span class="title function_">saveHouse</span><span class="params">(Integer id, String houseName, String houseSize)</span> &#123;</span><br><span class="line">        <span class="type">House</span> <span class="variable">house</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">House</span>(id, houseName, houseSize);</span><br><span class="line">        houseRepository.save(house);</span><br><span class="line">        <span class="keyword">return</span> house;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//http://localhost:8080/queryHouse?id=1</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/queryHouse&quot;)</span></span><br><span class="line">    <span class="meta">@Cacheable(value = &quot;house&quot;, key = &quot;#id&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> House <span class="title function_">queryHouse</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="type">House</span> <span class="variable">house</span> <span class="operator">=</span> houseRepository.getOne(id);</span><br><span class="line">        <span class="keyword">return</span> house;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//http://localhost:8080/deleteHouse?id=1</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/deleteHouse&quot;)</span></span><br><span class="line">    <span class="meta">@CacheEvict(value = &quot;house&quot;, key = &quot;#id&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">deleteHouse</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        houseRepository.deleteById(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//http://localhost:8080/deleteCache</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/deleteCache&quot;)</span></span><br><span class="line">    <span class="meta">@CacheEvict(value = &quot;house&quot;, allEntries = true)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteCache</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-整合JPA</title>
      <link href="/article/b72c3926.html"/>
      <url>/article/b72c3926.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>JPA (Java Persistence API) 是 Sun 官方提出的 Java 持久化规范。它为 Java 开发人员提供了一种对象/关联映射工具来管理 Java 应用中的关系数据。Spring Boot Jpa 是 Spring 基于 ORM 框架、Jpa 规范的基础上封装的一套 Jpa 应用框架，可使开发者用极简的代码即可实现对数据的访问和操作。它提供了包括增删改查等在内的常用功能，且易于扩展！</p><!-- 前言 --><span id="more"></span><h2 id="1、pom-xml文件"><a href="#1、pom-xml文件" class="headerlink" title="1、pom.xml文件"></a>1、pom.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.huzh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-jpa<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot-jpa<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--jpa--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、配置jpa和数据库"><a href="#2、配置jpa和数据库" class="headerlink" title="2、配置jpa和数据库"></a>2、配置jpa和数据库</h2><p>使用xxx.yml配置（使用xxx.properties也可以）。此处配置可能会导致数据库事务无法使用，如需使用事务请参考<a href="https://www.jianshu.com/p/6d9a062c199d">SpringBoot 使用事务</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#数据库配置</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test?serverTimezone=GMT</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##validate  加载hibernate时，验证创建数据库表结构</span></span><br><span class="line">  <span class="comment">##create   每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。</span></span><br><span class="line">  <span class="comment">##create-drop        加载hibernate时创建，退出是删除表结构</span></span><br><span class="line">  <span class="comment">##update                 加载hibernate自动更新数据库结构</span></span><br><span class="line">  <span class="comment">##validate 启动时验证表的结构，不会创建表</span></span><br><span class="line">  <span class="comment">##none  启动时不做任何操作</span></span><br><span class="line">  <span class="comment">#jpa配置</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#端口号</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h2 id="3、创建实体类City"><a href="#3、创建实体类City" class="headerlink" title="3、创建实体类City"></a>3、创建实体类City</h2><p>JPA可以自动生成表。</p><ol><li>@Entity注解：<ul><li> @Entity必须与@Id注解结合使用，否则No identifier specified for entity:</li><li>其name 属性：<br>(可选)实体名称。 缺省为实体类的非限定名称。<br>该名称用于引用查询中的实体。<br>该名称不能是Java持久性查询语言中的保留字面值。</li><li>不与@Table结合的话表名默认为SnakeCaseStrategy(命名策略 )为表名<br>若使用name属性且没有与@Table结合，则表名为 name值的SnakeCaseStrategy(命名策略 )</li></ul></li><li>其中@Table常用的两个属性：<ul><li>name 用来命名 当前实体类 对应的数据库 表的名字</li><li>uniqueConstraints 用来批量命名唯一键<br> 其作用等同于多个：@Column(unique = true)</li></ul></li><li>主键采用uuid生成策略。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;city&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">City</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(generator = &quot;system-uuid&quot;)</span></span><br><span class="line">    <span class="meta">@GenericGenerator(name = &quot;system-uuid&quot;, strategy = &quot;uuid&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String cityId;</span><br><span class="line">    <span class="keyword">private</span> String cityName;</span><br><span class="line">    <span class="keyword">private</span> String cityIntroduce;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">City</span><span class="params">(String cityId, String cityName, String cityIntroduce)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cityId = cityId;</span><br><span class="line">        <span class="built_in">this</span>.cityName = cityName;</span><br><span class="line">        <span class="built_in">this</span>.cityIntroduce = cityIntroduce;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">City</span><span class="params">(String cityName, String cityIntroduce)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cityName = cityName;</span><br><span class="line">        <span class="built_in">this</span>.cityIntroduce = cityIntroduce;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">City</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCityId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cityId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCityId</span><span class="params">(String cityId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cityId = cityId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCityName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cityName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCityName</span><span class="params">(String cityName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cityName = cityName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCityIntroduce</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cityIntroduce;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCityIntroduce</span><span class="params">(String cityIntroduce)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cityIntroduce = cityIntroduce;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、创建DAO"><a href="#4、创建DAO" class="headerlink" title="4、创建DAO"></a>4、创建DAO</h2>jpa提供基本查询和复杂的查询<br>基本查询也分为两种，一种是 Spring Data 默认已经实现，一种是根据查询的方法来自动解析成 SQL。这里用到了自定义的简单查询。复杂查询有时间在总结。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CityRepository</span> <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&lt;City, String&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deleteByCityId</span><span class="params">(String id)</span>;</span><br><span class="line"></span><br><span class="line">    City <span class="title function_">findByCityId</span><span class="params">(String id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、创建controller"><a href="#5、创建controller" class="headerlink" title="5、创建controller"></a>5、创建controller</h2></li><li>@Autowired自动装配，其作用是为了消除代码Java代码里面的getter/setter与bean属性中的property。可以用@Resource代替。</li><li>@GetMapping是一个组合注解，是@RequestMapping(method = RequestMethod.GET)的缩写。该注解将HTTP Get 映射到 特定的处理方法上。</li><li>删除方法需加@Transactional，否则报错<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CityController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CityRepository cityRepository;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//http://localhost:8080/saveCity?cityName=北京&amp;cityIntroduce=中国首都</span></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;saveCity&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">saveCity</span><span class="params">(String cityName, String cityIntroduce)</span> &#123;</span><br><span class="line">        <span class="type">City</span> <span class="variable">city</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">City</span>(cityName, cityIntroduce);</span><br><span class="line">        cityRepository.save(city);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//http://localhost:8080/deleteCity?cityId=2</span></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;deleteCity&quot;)</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">deleteCity</span><span class="params">(String cityId)</span> &#123;</span><br><span class="line">        cityRepository.deleteByCityId(cityId);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//http://localhost:8080/updateCity?cityId=3&amp;cityName=郑州&amp;cityIntroduce=河南省省会</span></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;updateCity&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">updateCity</span><span class="params">(String cityId, String cityName, String cityIntroduce)</span> &#123;</span><br><span class="line">        <span class="type">City</span> <span class="variable">city</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">City</span>(cityId, cityName, cityIntroduce);</span><br><span class="line">        cityRepository.save(city);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//http://localhost:8080/getCityById?cityId=3</span></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;getCityById&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> City <span class="title function_">getCityById</span><span class="params">(String cityId)</span> &#123;</span><br><span class="line">        <span class="type">City</span> <span class="variable">city</span> <span class="operator">=</span> cityRepository.findByCityId(cityId);</span><br><span class="line">        <span class="keyword">return</span> city;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试检验"><a href="#测试检验" class="headerlink" title="测试检验"></a>测试检验</h2></li></ol>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-统一处理异常</title>
      <link href="/article/f7d8f47a.html"/>
      <url>/article/f7d8f47a.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>当项目出错时，如何统一处理异常。</p><!-- 前言 --><span id="more"></span><h2 id="1、pom-xml文件"><a href="#1、pom-xml文件" class="headerlink" title="1、pom.xml文件"></a>1、pom.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.huzh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-error<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-error<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot-error<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 调试热启动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、创建一个IndexController类，定义一个正常方法和一个错误方法"><a href="#2、创建一个IndexController类，定义一个正常方法和一个错误方法" class="headerlink" title="2、创建一个IndexController类，定义一个正常方法和一个错误方法"></a>2、创建一个IndexController类，定义一个正常方法和一个错误方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">indesx</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">return</span> map.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、访问项目，分析结果"><a href="#3、访问项目，分析结果" class="headerlink" title="3、访问项目，分析结果"></a>3、访问项目，分析结果</h2><p>访问<a href="http://localhost:8080/aa">http://localhost:8080/aa</a>, 如下<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/SpringBoot-%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8_1.png" alt="1.png"></p><p>访问<a href="http://localhost:8080/test">http://localhost:8080/test</a>, 如下<br><img src="https://gitee.com/YueXianHu/images/raw/master/img/SpringBoot-%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8_2.png" alt="2.png"></p><h2 id="4、创建异常处理类CommonErrorController"><a href="#4、创建异常处理类CommonErrorController" class="headerlink" title="4、创建异常处理类CommonErrorController"></a>4、创建异常处理类CommonErrorController</h2><p>从上图可以看到，springboot报错的时候都在找/error这个地址，这时我们新建一个CommonErrorController来统一处理异常，这个类实现了ErrorController。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonErrorController</span> <span class="keyword">implements</span> <span class="title class_">ErrorController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ERROR_PATH</span> <span class="operator">=</span> <span class="string">&quot;/error&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getErrorPath</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ERROR_PATH;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = ERROR_PATH)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">handleError</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(getErrorPath());</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/YueXianHu/images/raw/master/img/SpringBoot-%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8_3.png" alt="3.png"></p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-validator校验</title>
      <link href="/article/8182c632.html"/>
      <url>/article/8182c632.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在开发中，我们经常会遇到表单验证，除了前端验证，还有后端验证。也需要校验一些数据的可行性，比如是否为空，长度，身份证，邮箱等等。</p><!-- 前言 --><span id="more"></span><h2 id="1、pom文件"><a href="#1、pom文件" class="headerlink" title="1、pom文件"></a>1、pom文件</h2><p>在pom.xml中加入web依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.huzh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-validator<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- web --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 调试热启动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、创建一个实体类Demo"><a href="#2、创建一个实体类Demo" class="headerlink" title="2、创建一个实体类Demo"></a>2、创建一个实体类Demo</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="meta">@NotEmpty</span>(message = <span class="string">&quot;用户名不能为空&quot;</span>)</span><br><span class="line">    <span class="meta">@Length</span>(min = <span class="number">6</span>, max = <span class="number">12</span>, message = <span class="string">&quot;用户名长度必须位于6到12之间&quot;</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="title class_">String</span> userName;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotEmpty</span>(message = <span class="string">&quot;密码不能为空&quot;</span>)</span><br><span class="line">    <span class="meta">@Length</span>(min = <span class="number">6</span>, message = <span class="string">&quot;密码长度不能小于6位&quot;</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="title class_">String</span> passWord;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Email</span>(message = <span class="string">&quot;请输入正确的邮箱&quot;</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="title class_">String</span> email;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pattern</span>(regexp = <span class="string">&quot;^(\\d&#123;18,18&#125;|\\d&#123;15,15&#125;|(\\d&#123;17,17&#125;[x|X]))$&quot;</span>, message = <span class="string">&quot;身份证格式错误&quot;</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="title class_">String</span> idCard;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title class_">String</span> <span class="title function_">getUserName</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="title function_">setUserName</span>(<span class="params"><span class="built_in">String</span> userName</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">userName</span> = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title class_">String</span> <span class="title function_">getPassWord</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> passWord;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="title function_">setPassWord</span>(<span class="params"><span class="built_in">String</span> passWord</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">passWord</span> = passWord;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title class_">String</span> <span class="title function_">getEmail</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="title function_">setEmail</span>(<span class="params"><span class="built_in">String</span> email</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">email</span> = email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title class_">String</span> <span class="title function_">getIdCard</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> idCard;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="title function_">setIdCard</span>(<span class="params"><span class="built_in">String</span> idCard</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">idCard</span> = idCard;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>更多注解参考以下或者自行搜索 validator校验</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">空检查</span><br><span class="line"><span class="variable">@Null</span>       验证对象是否为null</span><br><span class="line"><span class="variable">@NotNull</span>    验证对象是否不为null, 无法查检长度为<span class="number">0</span>的字符串</span><br><span class="line"><span class="variable">@NotBlank</span> 检查约束字符串是不是Null还有被Trim的长度是否大于<span class="number">0</span>,只对字符串,且会去掉前后空格.</span><br><span class="line"><span class="variable">@NotEmpty</span> 检查约束元素是否为NULL或者是EMPTY.</span><br><span class="line"></span><br><span class="line">Booelan检查</span><br><span class="line"><span class="variable">@AssertTrue</span>     验证 Boolean 对象是否为 true  </span><br><span class="line"><span class="variable">@AssertFalse</span>    验证 Boolean 对象是否为 false  </span><br><span class="line"></span><br><span class="line">长度检查</span><br><span class="line"><span class="variable">@Size</span>(min=, max=) 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内  </span><br><span class="line"><span class="variable">@Length</span>(min=, max=) Validates that the annotated string is between min and max included.</span><br><span class="line"></span><br><span class="line">日期检查</span><br><span class="line"><span class="variable">@Past</span>           验证 Date 和 Calendar 对象是否在当前时间之前  </span><br><span class="line"><span class="variable">@Future</span>     验证 Date 和 Calendar 对象是否在当前时间之后  </span><br><span class="line"><span class="variable">@Pattern</span>    验证 String 对象是否符合正则表达式的规则</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">数值检查，建议使用在Stirng,Integer类型，不建议使用在int类型上，因为表单值为“”时无法转换为int，但可以转换为Stirng为<span class="string">&quot;&quot;</span>,Integer为null</span><br><span class="line"><span class="variable">@Min</span>            验证 Number 和 String 对象是否大等于指定的值  </span><br><span class="line"><span class="variable">@Max</span>            验证 Number 和 String 对象是否小等于指定的值  </span><br><span class="line"><span class="variable">@DecimalMax</span> 被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.小数存在精度</span><br><span class="line"><span class="variable">@DecimalMin</span> 被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.小数存在精度</span><br><span class="line"><span class="variable">@Digits</span>     验证 Number 和 String 的构成是否合法  </span><br><span class="line"><span class="variable">@Digits</span>(integer=,fraction=) 验证字符串是否是符合指定格式的数字，interger指定整数精度，fraction指定小数精度。</span><br><span class="line"><span class="variable">@Range</span>(min=, max=) 检查数字是否介于min和max之间.</span><br><span class="line"></span><br><span class="line"><span class="variable">@Range</span>(min=<span class="number">10000</span>,max=<span class="number">50000</span>,message=<span class="string">&quot;range.bean.wage&quot;</span>)</span><br><span class="line">private BigDecimal wage;</span><br><span class="line"></span><br><span class="line"><span class="variable">@Valid</span> 递归的对关联对象进行校验, 如果关联对象是个集合或者数组,那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.(是否进行递归验证)</span><br><span class="line"><span class="variable">@CreditCardNumber</span>信用卡验证</span><br><span class="line"><span class="variable">@Email</span>  验证是否是邮件地址，如果为null,不进行验证，算通过验证。</span><br><span class="line"><span class="variable">@ScriptAssert</span>(lang= ,script=, alias=)</span><br><span class="line"><span class="variable">@URL</span>(protocol=,host=, port=,regexp=, flags=)</span><br></pre></td></tr></table></figure><h2 id="3、创建一个TestDemoController，来测试校验"><a href="#3、创建一个TestDemoController，来测试校验" class="headerlink" title="3、创建一个TestDemoController，来测试校验"></a>3、创建一个TestDemoController，来测试校验</h2><ol><li>@RestController是@ResponseBody和@Controller的组合注解，用于返回json</li><li>@Valid注解用于进行数据的校验。<br>@Valid要紧挨着JavaBean（即PersonScope），要不然不会生效的。<br>一个@Valid的参数后必须紧挨着一个BindingResult 参数，否则spring会在校验不通过时直接抛出异常。<figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public <span class="keyword">class</span> TestDemoController &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="constructor">PostMapping(<span class="string">&quot;/&quot;</span>)</span></span><br><span class="line">    public String test<span class="constructor">Demo(@Valid Demo <span class="params">demo</span>, BindingResult <span class="params">bindingResult</span>)</span> &#123;</span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> <span class="constructor">StringBuffer()</span>;</span><br><span class="line">        <span class="keyword">if</span> (bindingResult.has<span class="constructor">Errors()</span>) &#123;</span><br><span class="line">            List&lt;ObjectError&gt; <span class="built_in">list</span> = bindingResult.get<span class="constructor">AllErrors()</span>;</span><br><span class="line">            <span class="keyword">for</span> (ObjectError objectError : <span class="built_in">list</span>) &#123;</span><br><span class="line">                stringBuffer.append(objectError.get<span class="constructor">DefaultMessage()</span>);</span><br><span class="line">                stringBuffer.append(<span class="string">&quot;---&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return stringBuffer != null ? stringBuffer.<span class="keyword">to</span><span class="constructor">String()</span> : <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、启动项目使用postman发送请求测试"><a href="#4、启动项目使用postman发送请求测试" class="headerlink" title="4、启动项目使用postman发送请求测试"></a>4、启动项目使用postman发送请求测试</h2><img src="https://gitee.com/YueXianHu/images/raw/master/img/SpringBoot-validator%E6%A0%A1%E9%AA%8C_1.png" alt="1.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-定时任务</title>
      <link href="/article/bd46367b.html"/>
      <url>/article/bd46367b.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot默认已经帮我们实行了，只需要添加相应的注解就可以实现。</p><p>SpringBoot整合定时任务其实就两点：<br>1.创建一个能被定时任务类，方法上加入@Scheduled注解<br>2.在启动类application上加入@EnableScheduling注解</p><!-- 前言 --><span id="more"></span><h2 id="1、pom文件"><a href="#1、pom文件" class="headerlink" title="1、pom文件"></a>1、pom文件</h2><p>只需要引入 Spring Boot Starter 包即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.huzh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-scheduled<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-scheduled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>springboot-scheduled<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 调试热启动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、application类启用定时"><a href="#2、application类启用定时" class="headerlink" title="2、application类启用定时"></a>2、application类启用定时</h2><p>在启动类上面加上@EnableScheduling即可开启定时</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@SpringBootApplication</span></span><br><span class="line"><span class="variable">@EnableScheduling</span></span><br><span class="line">public class SpringbootScheduledApplication &#123;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">public</span> <span class="selector-tag">static</span> <span class="selector-tag">void</span> <span class="selector-tag">main</span>(String[] args) &#123;</span><br><span class="line">        <span class="selector-tag">SpringApplication</span><span class="selector-class">.run</span>(SpringbootScheduledApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、创建定时任务类TestTimer"><a href="#3、创建定时任务类TestTimer" class="headerlink" title="3、创建定时任务类TestTimer"></a>3、创建定时任务类TestTimer</h2><p>1.@Component注解表明一个类会作为组件类，并告知Spring要为这个类创建bean。<br>2.@EnableScheduling开启定时</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTimer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled</span>(cron = <span class="string">&quot;0/1 * * * * ?&quot;</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">void</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title class_">System</span>.<span class="property">out</span>.<span class="title function_">println</span>(<span class="string">&quot;执行定时任务的时间是&quot;</span> + <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h2><p>需要注意的是@Scheduled(cron = “0/1 * * * * ?”)中cron的值根据自己实际需要去写，可参考<a href="http://cron.qqe2.com/">http://cron.qqe2.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
